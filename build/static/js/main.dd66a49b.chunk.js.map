{"version":3,"sources":["components/course-element.js","overmind.js","utils.js","components/course-tags.js","hooks/useWhyDidYouUpdate.js","components/course-unit.js","components/download-course-modal.js","components/upload-course-modal.js","components/course.js","pages/course-page.js","App.js","serviceWorker.js","index.js"],"names":["CourseElement","_ref","name","criterias","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isActive","setActive","toggleActive","useCallback","a","react_default","createElement","Accordion","Title","active","onClick","Icon","Content","style","padding","map","c","Message","key","id","state","ui","isLoadingCourse","isLoadingJson","showSaveJsonModal","isProcessingJson","processJsonError","course","CoursePayload","outputJson","tags","courseTags","units","reduce","prev","current","unitName","objectSpread","defineProperty","tag","actions","updateTag","_ref2","unit","tagValues","t","toConsumableArray","u","code","displaySaveModal","_ref3","setTimeout","input","EPC","elements","previous","pc","text","uploadCourse","_ref4","courseContent","resetJsonProcessState","json","JSON","parse","keys","eKey","el","cKey","processJsonResult","e","message","console","error","_ref5","overmind","createOvermind","effects","useOvermind","createHook","delimiters","parseSelectedTagsOrNull","CourseTags","props","previousProps","useRef","useEffect","allKeys","changesObj","forEach","from","to","length","log","useWhyDidYouUpdate","onTagsUpdated","_useState","selectedTags","_useState2","setTags","notifyTagsUpdated","handleDelete","index","newTags","filter","i","handleAddition","concat","ReactTags","classNames","tagInput","allowDragDrop","CourseUnit","handleTagsUpdated","fluid","styled","course_tags","course_element","DownloadCourseModal","modalTrigger","_useOvermind","handleOnModalOpen","handleSave","blob","Blob","stringify","type","FileSaver","saveAs","saveJsonContent","Modal","trigger","onOpen","Header","Segment","height","overflow","Dimmer","Loader","main_default","onEdit","onAdd","onDelete","src","Actions","Button","loading","positive","labelPosition","icon","content","UploadCourseModal","setCourseContent","modalRef","timeoutId","handleClose","clearTimeout","handleTextChanged","event","textContent","target","value","handleUploadCourse","handleModalClosed","ref","onClose","closeOnEscape","closeOnDimmerClick","color","size","textAlign","as","Form","TextArea","rows","onChange","placeholder","Boolean","Course","handUpdate","Menu","position","upload_course_modal","Item","download_course_modal","components_course_unit","Page","objectDestructuringEmpty","App","alt","course_page","window","location","hostname","match","ReactDOM","render","overmind_react_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd66a49b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Icon, Segment, Container, Message } from 'semantic-ui-react'\n\nconst CourseElement = ({name, criterias}) => {\n    const [ isActive, setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion>\n            <Accordion.Title active={isActive} onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {name}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <div style={{padding: '0 10px 10px 10px'}}>\n                    {criterias && criterias.map(c => <Message key={c.id}>{c.name}</Message>)}\n                </div>\n            </Accordion.Content>\n        </Accordion>\n\n        // <div>\n        //     <h3>{name}</h3>\n        //     <ul>\n        //         {criterias && criterias.map(c => <li key={c.id}>{c.name}</li>)}\n        //     </ul>\n        // </div>\n    );\n};\n\nCourseElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    criterias: PropTypes.array.isRequired\n}\n\nexport default CourseElement;\n","import { createOvermind } from 'overmind';\nimport { createHook } from 'overmind-react';\nimport CoursePayload from './course-unit.json';\nimport { unnormalizeCourseJson, normalizeCourseJson } from './utils';\n\nconst state = {\n    ui: {\n        isLoadingCourse: false,\n        isLoadingJson: false,\n        showSaveJsonModal: false,\n        isProcessingJson: false,\n        processJsonError: null\n    },\n    course: CoursePayload,\n    outputJson: null,\n    tags: [],\n    courseTags: state => state.course && state.course.units.reduce((prev, current) => { \n        const unitName = current.name;\n        return {\n            ...prev,\n            [current.tag]: {\n                ...prev[current.tag],\n                unitName\n            }\n        };\n    }, {})\n}\n\nconst actions = {\n    updateTag: ({ state }, { tags, unit }) => {\n        const tagValues = tags.map(t => t.id);\n\n        state.tags = [...tagValues];\n        \n        state.course.units = state.course.units.map(u => {\n            if(u.code !== unit.code) {\n                return u;\n            } else {\n                return { ...u, tags: [...state.tags]}\n            }\n        })\n    },\n    displaySaveModal: ({state}) => {\n        state.ui.showSaveJsonModal = true;\n        state.ui.isLoadingJson = true;\n        setTimeout(() => {\n            state.outputJson = unnormalizeCourseJson(state.course);\n            state.ui.isLoadingJson = false;\n        }, 0);\n    },\n    uploadCourse: ({ state, actions }, courseContent) => {\n        actions.resetJsonProcessState();\n        state.ui.isProcessingJson = true;\n        setTimeout(() => {\n            try {\n                const json = JSON.parse(courseContent);\n                state.course = normalizeCourseJson(json);\n                state.ui.processJsonResult = 'success';\n            } catch (e) {\n                state.ui.processJsonResult = 'fail';\n                state.ui.processJsonError = e.message;\n                console.error(e);\n            } finally {\n                state.ui.isProcessingJson = false;\n            } \n        }, 1000);\n    },\n    resetJsonProcessState: ({state}) => {\n        state.ui.isProcessingJson = false;\n        state.ui.processJsonError = null;\n        state.ui.processJsonResult = null;\n    }\n}\n\nconst effects = {\n\n}\n\nexport const overmind = createOvermind({\n    state,\n    actions,\n    effects\n});\n\nexport const useOvermind = createHook();","\n\nconst reduceCourseCriterias = (criterias) => {\n    return criterias.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: { text: current.name }\n        }\n    }, {});\n}\n\nconst reduceCourseElements = (elements) => {\n    return elements.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: {\n                name: current.name,\n                pc: reduceCourseCriterias(current.criterias)\n            }\n        }\n    }, {});\n}\n\nexport const unnormalizeCourseJson = (input) => {\n    const output = {\n        name: input.name,\n        code: input.code,\n        units: input.units.map(unit => {\n            return {\n                name: unit.name,\n                code: unit.code,\n                tags: unit.tags,\n                EPC: reduceCourseElements(unit.elements)\n            }\n        })\n    }\n    return output;\n}\n\nexport const normalizeCourseJson = (input) => ({\n    name: input.name,\n    code: input.code,\n    units: input.units.map(u => {\n        return {\n            name: u.name,\n            code: u.code,\n            tags: u.tags || [],\n            elements: Object.keys(u.EPC).map(eKey => {\n                const el = u.EPC[eKey];\n                return {\n                    id: eKey,\n                    name: el.name,\n                    criterias: Object.keys(el.pc).map(cKey => {\n                        const criteria = el.pc[cKey];\n                        return {\n                            id: cKey,\n                            name: criteria.text\n                        }\n                    })\n                };\n            })\n        }\n    })\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select/creatable';\nimport { useOvermind } from '../overmind';\n\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nimport useWhyDidYouUpdate from '../hooks/useWhyDidYouUpdate';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst initialState = {\n    tags: [],\n    suggestions: []\n}\n\nconst parseSelectedTagsOrNull = (tags) => (tags && tags.map(text => ({id: text, text }))) || [];\n\nconst CourseTags = (props) => {\n    useWhyDidYouUpdate('[course-tags]', props);\n    const { onTagsUpdated } = props;\n    const [ tags, setTags ] = useState(parseSelectedTagsOrNull(props.selectedTags));\n\n    useEffect(() => {\n        setTags(parseSelectedTagsOrNull(props.selectedTags))\n    }, [ setTags, props.selectedTags ] )\n\n    const notifyTagsUpdated = useCallback((tags) => {\n        console.log('should notify with', { onTagsUpdated, tags });\n        onTagsUpdated && onTagsUpdated(tags)\n    }, [ onTagsUpdated] );\n\n    const handleDelete = useCallback(index => {\n        const newTags = tags.filter((tag, i) => i !== index);\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    const handleAddition = useCallback(tag => {\n        const newTags = [...tags.filter(t => t.id !== tag.id), tag]\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    return (\n        <div>\n            <ReactTags \n                classNames={{\n                    tag: 'ui label',\n                    tagInput: 'ui input'\n                }}\n                tags={tags}\n                allowDragDrop={false}\n                delimiters={delimiters}\n                handleDelete={handleDelete}\n                handleAddition={handleAddition} />\n        </div>\n    );\n}\n\nexport const OvermindedCourseTags = ({ unit }) => {\n    const { state, actions } = useOvermind();\n\n    const stateUnit = state.course.units.filter(u => u.code === unit.code);\n\n    const handleTagSelected = useCallback((tags) => {\n        console.log('handle called...');\n        actions.updateTag({ unit, tags })\n    }, [ actions, unit ]);\n\n    console.log('overminded', {\n        state\n    })\n\n    return <CourseTags\n                tags={state.tags}\n                selectedTags={stateUnit.tags ? [...stateUnit.tags] : []}\n                onTagsUpdated={handleTagSelected}\n            />\n}\n\nexport default CourseTags;","import { useRef, useEffect } from 'react';\n\nexport default function useWhyDidYouUpdate(name, props) {\n    // Get a mutable ref object where we can store props ...\n    // ... for comparison next time this hook runs.\n    const previousProps = useRef();\n  \n    useEffect(() => {\n      if (previousProps.current) {\n        // Get all keys from previous and current props\n        const allKeys = Object.keys({ ...previousProps.current, ...props });\n        // Use this object to keep track of changed props\n        const changesObj = {};\n        // Iterate through keys\n        allKeys.forEach(key => {\n          // If previous is different from current\n          if (previousProps.current[key] !== props[key]) {\n            // Add to changesObj\n            changesObj[key] = {\n              from: previousProps.current[key],\n              to: props[key]\n            };\n          }\n        });\n  \n        // If changesObj not empty then output to console\n        if (Object.keys(changesObj).length) {\n          console.log('[why-did-you-update]', name, changesObj);\n        }\n      }\n  \n      // Finally update previousProps with current props for next hook call\n      previousProps.current = props;\n    });\n  }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CourseElement from './course-element';\nimport CourseTags from './course-tags';\nimport { Accordion, Icon } from 'semantic-ui-react';\n\nconst CourseUnit = ({ \n    name, \n    code, \n    elements,\n    tags,\n    onTagsUpdated\n}) =>\n{\n    const handleTagsUpdated = React.useCallback((tags) => onTagsUpdated(tags), [ ]);\n\n    const [ isActive , setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        console.log('toggle called..');\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion active={isActive} fluid styled>\n            <Accordion.Title onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {`${code} - ${name}`}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <CourseTags selectedTags={tags} onTagsUpdated={handleTagsUpdated} />\n                {elements && elements.map(e => <CourseElement key={e.id} name={e.name} criterias={e.criterias} />)}\n            </Accordion.Content>\n        </Accordion>\n\n        // <div className=\"course-unit\">\n        //     <h3>{code}</h3>\n        //     <h2>{name}</h2>\n        //     <CourseTags selectedTags={tags} onTagsUpdated={handleTagsUpdated} />\n        //     {elements && elements.map(e => <CourseElement key={e.id} name={e.name} criterias={e.criterias} />)}\n        // </div>\n    )\n};\n\nCourseUnit.propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired\n};\n\nexport default CourseUnit;","import React from 'react';\nimport { Modal, Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\nimport ReactJson from 'react-json-view';\nimport FileSaver from 'file-saver';\n\nconst saveJsonContent = (json) => {\n    var blob = new Blob([JSON.stringify(json)], { type: 'application.json;charset=utf-8'});\n    FileSaver.saveAs(blob, 'course-content.json');\n}\n\nconst DownloadCourseModal = ({ modalTrigger }) => {\n    const { state, actions } = useOvermind();\n\n    const handleOnModalOpen = React.useCallback(() => {\n        actions.displaySaveModal();\n    }, [ actions ]);\n\n    const handleSave = React.useCallback(() => {\n        saveJsonContent(state.outputJson);\n    }, [state.outputJson]);\n\n    return (\n        <Modal trigger={modalTrigger} onOpen={handleOnModalOpen}>\n            <Modal.Header>Download Course</Modal.Header>\n            <Modal.Content>\n                <Segment style={{height: 500, overflow: 'auto'}}>\n                    <Dimmer active={state.ui.isLoadingJson}>\n                        <Loader />\n                    </Dimmer>\n                    {state.outputJson && state.ui.isLoadingJson === false\n                    ? <ReactJson \n                        name={false}\n                        style={{overflow: 'auto'}}\n                        onEdit={false} onAdd={false} onDelete={false}\n                        src={state.outputJson} /> \n                    : null}\n                </Segment>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button \n                    loading={state.ui.isLoadingJson}\n                    positive\n                    labelPosition='right'\n                    icon='download'\n                    content='Download'\n                    onClick={handleSave}\n                />\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default DownloadCourseModal;","import React, { useCallback } from 'react';\nimport { useOvermind } from '../overmind';\nimport { Modal, Button, Form, TextArea, Message,\n    Header,\n    Dimmer, Loader, Segment, Icon } from 'semantic-ui-react';\n\nconst UploadCourseModal = ({modalTrigger}) => {\n    const { state, actions } = useOvermind();\n    \n    const [ courseContent, setCourseContent ] = React.useState(null);\n\n    const modalRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if(state.ui.processJsonResult === 'success') {\n            const timeoutId = setTimeout(() => modalRef.current.handleClose(), 2000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [ state.ui.processJsonResult ]);\n\n    const handleTextChanged = useCallback(event => {\n        const textContent = event.target.value;\n        setCourseContent(textContent);\n    }, [ setCourseContent ]);\n\n    const handleUploadCourse = useCallback(() => {\n        actions.uploadCourse(courseContent);\n    }, [ courseContent, actions ]);\n\n    const handleModalClosed = useCallback(() => {\n        actions.resetJsonProcessState();\n    }, [ actions ]);\n\n    return (\n        <Modal\n            ref={modalRef}\n            trigger={modalTrigger}\n            onClose={handleModalClosed}\n            closeOnEscape={state.ui.isProcessingJson === false}\n            closeOnDimmerClick={state.ui.isProcessingJson === false}>\n            <Modal.Header>Course Upload</Modal.Header>\n            <Modal.Content>\n                <Dimmer active={state.ui.isProcessingJson}>\n                    <Loader />\n                </Dimmer>\n                {state.ui.processJsonError \n                    ? (<Message color='red'>\n                            <Icon name='bug' color='red' size='large' />\n                            {state.ui.processJsonError}\n                        </Message>)\n                    : null }\n\n                {state.ui.processJsonResult === 'success'\n                    ? <Segment textAlign='center'>\n                        <Icon size='massive' color='green' name='hand peace outline' />\n                        <Header color='green' as=\"h2\">Course JSON uploaded</Header>\n                    </Segment>\n                    : (<Form>\n                        <TextArea \n                            rows={10}\n                            onChange={handleTextChanged}\n                            placeholder='Paste the JSON content here' />\n                    </Form>)}\n            </Modal.Content>\n            <Modal.Actions>\n                {state.ui.processJsonResult === 'success' \n                    ? null\n                    : (<Button\n                        active={Boolean(courseContent)}\n                        positive\n                        labelPosition='right'\n                        icon='upload'\n                        content='Upload'\n                        onClick={handleUploadCourse}\n                    />)}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default UploadCourseModal;","import React from 'react';\nimport CourseUnit from './course-unit';\nimport { useOvermind } from '../overmind';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport DownloadCourseModal from './download-course-modal';\nimport UploadCourseModal from './upload-course-modal';\n\nconst Course = ({name, code, units}) => {\n\n    const { state, actions } = useOvermind();\n\n    const handleTagsUpdated = React.useCallback((unit, tags) => {\n        actions.updateTag({ unit, tags });\n    }, [ actions ]);\n\n    const handUpdate = React.useCallback((unit) => (tags) => actions.updateTag({ unit, tags }), [ ]);\n\n    return (\n        <div>\n            <Menu>\n                <h2 style={{padding: '5px 20px'}}>{code} - {name}</h2>\n                <Menu.Menu position='right'>\n                    <UploadCourseModal modalTrigger={<Menu.Item>\n                        <Icon name='upload'></Icon>\n                        Upload JSON\n                    </Menu.Item>} />\n                    \n                    <DownloadCourseModal\n                        modalTrigger={(\n                            <Menu.Item>\n                                <Icon name=\"download\"></Icon>\n                                Download JSON\n                            </Menu.Item>\n                        )}\n                    />\n                </Menu.Menu>\n            </Menu>\n\n            {units.map(u => <CourseUnit\n                onTagsUpdated={handUpdate(u)}\n                tags={u.tags}\n                name={u.name} \n                code={u.code} \n                key={u.code} \n                elements={u.elements} />)}\n        </div>\n    );\n}\n\nexport default Course;","import React from 'react';\nimport Course from '../components/course';\nimport {useOvermind} from '../overmind';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Page = ({}) => {\n    const { state, actions } = useOvermind();\n\n    return (\n        <div>\n            <Dimmer active={state.ui.isLoadingCourse}>\n                <Loader />\n            </Dimmer>\n            <Course {...state.course} />\n        </div>\n    );\n};\n\nexport default Page;","import React from 'react';\nimport './App.css';\nimport CoursePage from './pages/course-page';\n\nfunction App() {\n  return (\n    <div>\n      <div id=\"nav\">\n        <img \n          style={{height: 40}}\n          src=\"https://my.cti.qld.edu.au/pluginfile.php/1/core_admin/logocompact/0x70/1559616009/logo-lg-white.png\" \n          alt=\"CTI Logo\" />\n      </div>\n      <div id=\"page-content\">\n          <CoursePage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider as OvermindProvider } from 'overmind-react';\nimport { overmind } from './overmind';\n\n\nReactDOM.render(\n    <OvermindProvider value={overmind}>\n        <App />\n    </OvermindProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}