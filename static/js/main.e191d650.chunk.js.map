{"version":3,"sources":["components/course-element.js","utils.js","overmind.js","components/course-tags.js","components/course-unit.js","components/download-course-modal.js","components/upload-course-modal.js","components/course.js","pages/course-page.js","App.js","serviceWorker.js","index.js"],"names":["CourseElement","_ref","name","criterias","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isActive","setActive","toggleActive","useCallback","a","react_default","createElement","Accordion","Title","active","onClick","Icon","Content","style","padding","map","c","Message","key","id","normalizeCourseJson","input","Promise","resolve","setTimeout","code","units","u","tags","elements","keys","EPC","eKey","el","pc","cKey","text","state","ui","isLoadingCourse","isLoadingJson","showSaveJsonModal","isProcessingJson","processJsonError","course","outputJson","courseTags","reduce","prev","current","unitName","objectSpread","defineProperty","tag","actions","init","_init","asyncToGenerator","regenerator_default","mark","_callee","effects","_course","wrap","_context","next","loadCourseFromStorage","fetchCourse","sent","t0","CoursePayload","console","error","finish","stop","_x","apply","this","arguments","updateTag","_ref2","_ref3","unit","tagValues","t","toConsumableArray","saveJsonToLocalStorage","displaySaveModal","_ref4","previous","uploadCourse","_ref5","courseContent","resetJsonProcessState","_callee2","json","_context2","JSON","parse","processJsonResult","message","_ref7","_ref8","localStorage","setItem","stringify","_fetchCourse","_callee3","resp","_context3","fetch","abrupt","storeItem","getItem","overmind","createOvermind","useOvermind","createHook","delimiters","parseSelectedTagsOrNull","CourseTags","props","onTagsUpdated","_useState","selectedTags","_useState2","setTags","useEffect","notifyTagsUpdated","handleDelete","index","newTags","filter","i","handleAddition","concat","ReactTags","classNames","tagInput","allowDragDrop","CourseUnit","handleTagsUpdated","toString","fluid","styled","course_tags","e","course_element","DownloadCourseModal","modalTrigger","_useOvermind","handleOnModalOpen","handleSave","blob","Blob","type","FileSaver","saveAs","saveJsonContent","Modal","trigger","onOpen","Header","Segment","height","overflow","Dimmer","Loader","main_default","onEdit","onAdd","onDelete","src","Actions","Button","loading","positive","labelPosition","icon","content","UploadCourseModal","setCourseContent","modalRef","useRef","timeoutId","handleClose","clearTimeout","handleTextChanged","event","textContent","target","value","handleUploadCourse","handleModalClosed","ref","onClose","closeOnEscape","closeOnDimmerClick","color","size","textAlign","as","Form","TextArea","rows","onChange","placeholder","Boolean","Course","handUpdate","Menu","position","upload_course_modal","Item","download_course_modal","components_course_unit","Page","objectDestructuringEmpty","components_course","App","alt","course_page","window","location","hostname","match","ReactDOM","render","overmind_react_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e191d650.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Icon, Segment, Container, Message } from 'semantic-ui-react'\n\nconst CourseElement = ({name, criterias}) => {\n    const [ isActive, setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion>\n            <Accordion.Title active={isActive} onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {name}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <div style={{padding: '0 10px 10px 10px'}}>\n                    {criterias && criterias.map(c => <Message key={c.id}>{c.name}</Message>)}\n                </div>\n            </Accordion.Content>\n        </Accordion>\n\n        // <div>\n        //     <h3>{name}</h3>\n        //     <ul>\n        //         {criterias && criterias.map(c => <li key={c.id}>{c.name}</li>)}\n        //     </ul>\n        // </div>\n    );\n};\n\nCourseElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    criterias: PropTypes.array.isRequired\n}\n\nexport default CourseElement;\n","\n\nconst reduceCourseCriterias = (criterias) => {\n    return criterias.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: { text: current.name }\n        }\n    }, {});\n}\n\nconst reduceCourseElements = (elements) => {\n    return elements.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: {\n                name: current.name,\n                pc: reduceCourseCriterias(current.criterias)\n            }\n        }\n    }, {});\n}\n\nexport const unnormalizeCourseJson = (input) => {\n    const output = {\n        name: input.name,\n        code: input.code,\n        units: input.units.map(unit => {\n            return {\n                name: unit.name,\n                code: unit.code,\n                tags: unit.tags,\n                EPC: reduceCourseElements(unit.elements)\n            }\n        })\n    }\n    return output;\n}\n\nexport const normalizeCourseJson = (input) => new Promise((resolve) => setTimeout(() => resolve({\n    name: input.name,\n    code: input.code,\n    units: input.units.map(u => {\n        return {\n            name: u.name,\n            code: u.code,\n            tags: u.tags || [],\n            elements: Object.keys(u.EPC).map(eKey => {\n                const el = u.EPC[eKey];\n                return {\n                    id: eKey,\n                    name: el.name,\n                    criterias: Object.keys(el.pc).map(cKey => {\n                        const criteria = el.pc[cKey];\n                        return {\n                            id: cKey,\n                            name: criteria.text\n                        }\n                    })\n                };\n            })\n        }\n    })\n}), 0));","import { createOvermind } from 'overmind';\nimport { createHook } from 'overmind-react';\nimport CoursePayload from './course-unit.json';\nimport { unnormalizeCourseJson, normalizeCourseJson } from './utils';\n\nconst FETCH_COURSE_URL = 'https://c2d51dfc-1802-45cb-bcc0-51a3737725f5.mock.pstmn.io/courses/advance-diploma-it';\nconst COURSE_STORAGE_KEY = 'cti-course-key';\n\nconst state = {\n    ui: {\n        isLoadingCourse: false,\n        isLoadingJson: false,\n        showSaveJsonModal: false,\n        isProcessingJson: false,\n        processJsonError: null\n    },\n    course: null,\n    outputJson: null,\n    tags: [],\n    courseTags: state => state.course && state.course.units.reduce((prev, current) => { \n        const unitName = current.name;\n        return {\n            ...prev,\n            [current.tag]: {\n                ...prev[current.tag],\n                unitName\n            }\n        };\n    }, {})\n}\n\nconst actions = {\n    init: async ({ state, actions, effects }) => {\n        state.ui.isLoadingCourse = true;\n        try {\n            let course = effects.loadCourseFromStorage();\n\n            if(course) {\n                state.course = course;\n            } else {\n                const course = await effects.fetchCourse();\n                state.course = await normalizeCourseJson(course);\n            }\n        } catch(e) {\n            state.course = CoursePayload;\n            console.error(e);\n        } finally {\n            state.ui.isLoadingCourse = false;\n        }\n    },\n    updateTag: ({ state, actions }, { tags, unit }) => {\n        const tagValues = tags.map(t => t.id);\n\n        state.tags = [...tagValues];\n        \n        state.course.units = state.course.units.map(u => {\n            if(u.code !== unit.code) {\n                return u;\n            } else {\n                return { ...u, tags: [...state.tags]}\n            }\n        });\n        actions.saveJsonToLocalStorage();\n    },\n    displaySaveModal: ({state}) => {\n        state.ui.showSaveJsonModal = true;\n        state.ui.isLoadingJson = true;\n        setTimeout(() => {\n            state.outputJson = unnormalizeCourseJson(state.course);\n            state.ui.isLoadingJson = false;\n        }, 0);\n    },\n    uploadCourse: ({ state, actions }, courseContent) => {\n        actions.resetJsonProcessState();\n        state.ui.isProcessingJson = true;\n        setTimeout(async () => {\n            try {\n                const json = JSON.parse(courseContent);\n                state.course = await normalizeCourseJson(json);\n                state.ui.processJsonResult = 'success';\n            } catch (e) {\n                state.ui.processJsonResult = 'fail';\n                state.ui.processJsonError = e.message;\n                console.error(e);\n            } finally {\n                state.ui.isProcessingJson = false;\n            } \n        }, 1000);\n    },\n    resetJsonProcessState: ({state}) => {\n        state.ui.isProcessingJson = false;\n        state.ui.processJsonError = null;\n        state.ui.processJsonResult = null;\n    },\n    saveJsonToLocalStorage: ({state}) => {\n        localStorage.setItem(COURSE_STORAGE_KEY, JSON.stringify(state.course));\n    }\n}\n\nconst effects = {\n    fetchCourse: async () => {\n        const resp = await fetch(FETCH_COURSE_URL);\n        return await resp.json();\n    },\n    loadCourseFromStorage: () => {\n        const storeItem = localStorage.getItem(COURSE_STORAGE_KEY);\n        return storeItem && JSON.parse(storeItem);\n    }\n}\n\nexport const overmind = createOvermind({\n    state,\n    actions,\n    effects\n});\n\nexport const useOvermind = createHook();","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select/creatable';\nimport { useOvermind } from '../overmind';\n\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nimport useWhyDidYouUpdate from '../hooks/useWhyDidYouUpdate';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst initialState = {\n    tags: [],\n    suggestions: []\n}\n\nconst parseSelectedTagsOrNull = (tags) => (tags && tags.map(text => ({id: text, text }))) || [];\n\nconst CourseTags = (props) => {\n    // useWhyDidYouUpdate('[course-tags]', props);\n    const { onTagsUpdated } = props;\n    const [ tags, setTags ] = useState(parseSelectedTagsOrNull(props.selectedTags));\n\n    useEffect(() => {\n        setTags(parseSelectedTagsOrNull(props.selectedTags))\n    }, [ setTags, props.selectedTags ] )\n\n    const notifyTagsUpdated = useCallback((tags) => {\n        //console.log('should notify with', { onTagsUpdated, tags });\n        onTagsUpdated && onTagsUpdated(tags)\n    }, [ onTagsUpdated] );\n\n    const handleDelete = useCallback(index => {\n        const newTags = tags.filter((tag, i) => i !== index);\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    const handleAddition = useCallback(tag => {\n        const newTags = [...tags.filter(t => t.id !== tag.id), tag]\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    return (\n        <div>\n            <ReactTags \n                classNames={{\n                    tag: 'ui label',\n                    tagInput: 'ui input'\n                }}\n                tags={tags}\n                allowDragDrop={false}\n                delimiters={delimiters}\n                handleDelete={handleDelete}\n                handleAddition={handleAddition} />\n        </div>\n    );\n}\n\nexport const OvermindedCourseTags = ({ unit }) => {\n    const { state, actions } = useOvermind();\n\n    const stateUnit = state.course.units.filter(u => u.code === unit.code);\n\n    const handleTagSelected = useCallback((tags) => {\n        //console.log('handle called...');\n        actions.updateTag({ unit, tags })\n    }, [ actions, unit ]);\n\n    return <CourseTags\n                tags={state.tags}\n                selectedTags={stateUnit.tags ? [...stateUnit.tags] : []}\n                onTagsUpdated={handleTagSelected}\n            />\n}\n\nexport default CourseTags;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CourseElement from './course-element';\nimport CourseTags from './course-tags';\nimport { Accordion, Icon } from 'semantic-ui-react';\n\nconst CourseUnit = ({ \n    name, \n    code, \n    elements,\n    tags,\n    onTagsUpdated\n}) =>\n{\n    const handleTagsUpdated = React.useCallback((tags) => onTagsUpdated(tags), [ ]);\n\n    const [ isActive , setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion active={isActive.toString()} fluid styled>\n            <Accordion.Title onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {`${code} - ${name}`}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <CourseTags selectedTags={tags} onTagsUpdated={handleTagsUpdated} />\n                {elements && elements.map(e => <CourseElement key={e.id} name={e.name} criterias={e.criterias} />)}\n            </Accordion.Content>\n        </Accordion>\n    )\n};\n\nCourseUnit.propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired\n};\n\nexport default CourseUnit;","import React from 'react';\nimport { Modal, Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\nimport ReactJson from 'react-json-view';\nimport FileSaver from 'file-saver';\n\nconst saveJsonContent = (json) => {\n    var blob = new Blob([JSON.stringify(json)], { type: 'application.json;charset=utf-8'});\n    FileSaver.saveAs(blob, 'course-content.json');\n}\n\nconst DownloadCourseModal = ({ modalTrigger }) => {\n    const { state, actions } = useOvermind();\n\n    const handleOnModalOpen = React.useCallback(() => {\n        actions.displaySaveModal();\n    }, [ actions ]);\n\n    const handleSave = React.useCallback(() => {\n        saveJsonContent(state.outputJson);\n    }, [state.outputJson]);\n\n    return (\n        <Modal trigger={modalTrigger} onOpen={handleOnModalOpen}>\n            <Modal.Header>Download Course</Modal.Header>\n            <Modal.Content>\n                <Segment style={{height: 500, overflow: 'auto'}}>\n                    <Dimmer active={state.ui.isLoadingJson}>\n                        <Loader />\n                    </Dimmer>\n                    {state.outputJson && state.ui.isLoadingJson === false\n                    ? <ReactJson \n                        name={false}\n                        style={{overflow: 'auto'}}\n                        onEdit={false} onAdd={false} onDelete={false}\n                        src={state.outputJson} /> \n                    : null}\n                </Segment>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button \n                    loading={state.ui.isLoadingJson}\n                    positive\n                    labelPosition='right'\n                    icon='download'\n                    content='Download'\n                    onClick={handleSave}\n                />\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default DownloadCourseModal;","import React, { useCallback } from 'react';\nimport { useOvermind } from '../overmind';\nimport { Modal, Button, Form, TextArea, Message,\n    Header,\n    Dimmer, Loader, Segment, Icon } from 'semantic-ui-react';\n\nconst UploadCourseModal = ({modalTrigger}) => {\n    const { state, actions } = useOvermind();\n    \n    const [ courseContent, setCourseContent ] = React.useState(null);\n\n    const modalRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if(state.ui.processJsonResult === 'success') {\n            const timeoutId = setTimeout(() => modalRef.current.handleClose(), 2000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [ state.ui.processJsonResult ]);\n\n    const handleTextChanged = useCallback(event => {\n        const textContent = event.target.value;\n        setCourseContent(textContent);\n    }, [ setCourseContent ]);\n\n    const handleUploadCourse = useCallback(() => {\n        actions.uploadCourse(courseContent);\n    }, [ courseContent, actions ]);\n\n    const handleModalClosed = useCallback(() => {\n        actions.resetJsonProcessState();\n    }, [ actions ]);\n\n    return (\n        <Modal\n            ref={modalRef}\n            trigger={modalTrigger}\n            onClose={handleModalClosed}\n            closeOnEscape={state.ui.isProcessingJson === false}\n            closeOnDimmerClick={state.ui.isProcessingJson === false}>\n            <Modal.Header>Course Upload</Modal.Header>\n            <Modal.Content>\n                <Dimmer active={state.ui.isProcessingJson}>\n                    <Loader />\n                </Dimmer>\n                {state.ui.processJsonError \n                    ? (<Message color='red'>\n                            <Icon name='bug' color='red' size='large' />\n                            {state.ui.processJsonError}\n                        </Message>)\n                    : null }\n\n                {state.ui.processJsonResult === 'success'\n                    ? <Segment textAlign='center'>\n                        <Icon size='massive' color='green' name='hand peace outline' />\n                        <Header color='green' as=\"h2\">Course JSON uploaded</Header>\n                    </Segment>\n                    : (<Form>\n                        <TextArea \n                            rows={10}\n                            onChange={handleTextChanged}\n                            placeholder='Paste the JSON content here' />\n                    </Form>)}\n            </Modal.Content>\n            <Modal.Actions>\n                {state.ui.processJsonResult === 'success' \n                    ? null\n                    : (<Button\n                        active={Boolean(courseContent)}\n                        positive\n                        labelPosition='right'\n                        icon='upload'\n                        content='Upload'\n                        onClick={handleUploadCourse}\n                    />)}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default UploadCourseModal;","import React from 'react';\nimport CourseUnit from './course-unit';\nimport { useOvermind } from '../overmind';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport DownloadCourseModal from './download-course-modal';\nimport UploadCourseModal from './upload-course-modal';\n\nconst Course = ({name, code, units}) => {\n\n    const { state, actions } = useOvermind();\n\n    const handleTagsUpdated = React.useCallback((unit, tags) => {\n        actions.updateTag({ unit, tags });\n    }, [ actions ]);\n\n    const handUpdate = React.useCallback((unit) => (tags) => actions.updateTag({ unit, tags }), [ ]);\n\n    return (\n        <div>\n            <Menu>\n                <h2 style={{padding: '5px 20px'}}>{code} - {name}</h2>\n                <Menu.Menu position='right'>\n                    <UploadCourseModal modalTrigger={<Menu.Item>\n                        <Icon name='upload'></Icon>\n                        Upload JSON\n                    </Menu.Item>} />\n                    \n                    <DownloadCourseModal\n                        modalTrigger={(\n                            <Menu.Item>\n                                <Icon name=\"download\"></Icon>\n                                Download JSON\n                            </Menu.Item>\n                        )}\n                    />\n                </Menu.Menu>\n            </Menu>\n\n            {units.map(u => <CourseUnit\n                onTagsUpdated={handUpdate(u)}\n                tags={u.tags}\n                name={u.name} \n                code={u.code} \n                key={u.code} \n                elements={u.elements} />)}\n        </div>\n    );\n}\n\nexport default Course;","import React from 'react';\nimport Course from '../components/course';\nimport {useOvermind} from '../overmind';\nimport { Dimmer, Loader, Message, Icon } from 'semantic-ui-react';\n\nconst Page = ({}) => {\n    const { state, actions } = useOvermind();\n\n    return (\n        <div>\n            <Dimmer active={state.ui.isLoadingCourse}>\n                <Loader />\n            </Dimmer>\n            {\n                state.course ? <Course {...state.course} /> : <Message color='yellow'><Icon name='warning'></Icon>No course uploaded...</Message>\n            }\n            \n        </div>\n    );\n};\n\nexport default Page;","import React from 'react';\nimport './App.css';\nimport CoursePage from './pages/course-page';\nimport { useOvermind } from './overmind';\n\nfunction App() {\n\n  const { actions } = useOvermind();\n\n  React.useEffect(() => {\n    actions.init();\n  }, []);\n\n  return (\n    <div>\n      <div id=\"nav\">\n        <img \n          style={{height: 40}}\n          src=\"https://my.cti.qld.edu.au/pluginfile.php/1/core_admin/logocompact/0x70/1559616009/logo-lg-white.png\" \n          alt=\"CTI Logo\" />\n      </div>\n      <div id=\"page-content\">\n          <CoursePage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider as OvermindProvider } from 'overmind-react';\nimport { overmind } from './overmind';\n\n\nReactDOM.render(\n    <OvermindProvider value={overmind}>\n        <App />\n    </OvermindProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}