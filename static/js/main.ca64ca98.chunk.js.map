{"version":3,"sources":["components/course-element.js","utils.js","overmind.js","components/course-tags.js","components/course-unit.js","components/download-course-modal.js","components/upload-course-modal.js","components/units-tagged-group.js","components/course.js","pages/course-page.js","App.js","serviceWorker.js","index.js"],"names":["CourseElement","_ref","name","criterias","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isActive","setActive","toggleActive","useCallback","a","react_default","createElement","Accordion","Title","active","onClick","Icon","Content","style","padding","map","c","Message","key","id","normalizeCourseJson","input","Promise","resolve","reject","setTimeout","code","units","u","tags","elements","keys","EPC","eKey","el","pc","cKey","text","_unused","Error","actions","init","_init","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","state","effects","abrupt","sent","stop","_x","apply","this","arguments","updateTag","_ref2","_ref3","unit","tagValues","t","toConsumableArray","course","overmind_objectSpread","saveJsonToLocalStorage","displaySaveModal","_ref4","ui","showSaveJsonModal","isLoadingJson","outputJson","reduce","previous","current","_objectSpread","defineProperty","uploadCourse","_ref5","courseContent","resetJsonProcessState","isProcessingJson","_callee2","json","_context2","JSON","parse","processJsonResult","processJsonError","t0","message","console","error","finish","_ref7","_ref8","localStorage","setItem","stringify","loadFromStorage","_ref9","CoursePayload","refreshCourseTags","_ref10","isLoadingCourse","courseTags","unitName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","tag","value","concat","err","return","e","reorderCourse","_ref11","_ref12","sourceIndex","destinationIndex","result","_result$splice","splice","removed","fetchCourse","_fetchCourse","_callee3","resp","_context3","fetch","loadCourseFromStorage","storeItem","getItem","storageCourse","overmind","createOvermind","useOvermind","createHook","delimiters","parseSelectedTagsOrNull","CourseTags","props","onTagsUpdated","_useState","selectedTags","_useState2","setTags","useEffect","notifyTagsUpdated","handleDelete","index","newTags","filter","i","handleAddition","ReactTags","classNames","tagInput","allowDragDrop","getDragStyles","isDragging","length","backgroundColor","boxShadow","CourseUnit","handleTagsUpdated","react_beautiful_dnd_esm","draggableId","draggableProvided","draggableSnapshot","assign","ref","innerRef","draggableProps","paddingBottom","toString","fluid","styled","className","flipped","circular","color","rotated","dragHandleProps","Label","course_tags","course_element","DownloadCourseModal","modalTrigger","_useOvermind","handleOnModalOpen","handleSave","blob","Blob","type","FileSaver","saveAs","saveJsonContent","Modal","trigger","onOpen","Header","Segment","height","overflow","Dimmer","Loader","main_default","onEdit","onAdd","onDelete","src","Actions","Button","loading","positive","labelPosition","icon","content","UploadCourseModal","setCourseContent","modalRef","useRef","timeoutId","handleClose","clearTimeout","handleTextChanged","event","textContent","target","handleUploadCourse","handleModalClosed","onClose","closeOnEscape","closeOnDimmerClick","size","textAlign","as","Form","TextArea","rows","onChange","placeholder","disabled","Boolean","colours","getRandomColour","max","Math","floor","random","TagGroup","Card","Description","List","Item","extra","UnitsTaggedGroup","useMemo","Group","units_tagged_group_TagGroup","CourseUnits","droppableId","droppableProvided","droppableSnapshot","components_course_unit","Course","handleDragEnd","destination","source","panes","menuItem","render","Tab","Pane","onDragEnd","course_CourseUnits","units_tagged_group","Menu","position","upload_course_modal","download_course_modal","Page","OptionsContainer","showCurrentCourse","App","alt","App_OptionsContainer","course_page","window","location","hostname","match","ReactDOM","overmind_react_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca64ca98.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Icon, Segment, Container, Message } from 'semantic-ui-react'\n\nconst CourseElement = ({name, criterias}) => {\n    const [ isActive, setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion>\n            <Accordion.Title active={isActive} onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {name}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <div style={{padding: '0 10px 10px 10px'}}>\n                    {criterias && criterias.map(c => <Message key={c.id}>{c.name}</Message>)}\n                </div>\n            </Accordion.Content>\n        </Accordion>\n\n        // <div>\n        //     <h3>{name}</h3>\n        //     <ul>\n        //         {criterias && criterias.map(c => <li key={c.id}>{c.name}</li>)}\n        //     </ul>\n        // </div>\n    );\n};\n\nCourseElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    criterias: PropTypes.array.isRequired\n}\n\nexport default CourseElement;\n","\n\nconst reduceCourseCriterias = (criterias) => {\n    return criterias.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: { text: current.name }\n        }\n    }, {});\n}\n\nconst reduceCourseElements = (elements) => {\n    return elements.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: {\n                name: current.name,\n                pc: reduceCourseCriterias(current.criterias)\n            }\n        }\n    }, {});\n}\n\nexport const unnormalizeCourseJson = (input) => {\n    const output = {\n        name: input.name,\n        code: input.code,\n        units: input.units.map(unit => {\n            return {\n                name: unit.name,\n                code: unit.code,\n                tags: unit.tags,\n                EPC: reduceCourseElements(unit.elements)\n            }\n        })\n    }\n    return output;\n}\n\nexport const normalizeCourseJson = (input) => new Promise((resolve, reject) => setTimeout(() => {\n    try {\n        resolve({\n            name: input.name,\n            code: input.code,\n            units: input.units.map(u => {\n                return {\n                    name: u.name,\n                    code: u.code,\n                    tags: u.tags || [],\n                    elements: Object.keys(u.EPC).map(eKey => {\n                        const el = u.EPC[eKey];\n                        return {\n                            id: eKey,\n                            name: el.name,\n                            criterias: Object.keys(el.pc).map(cKey => {\n                                const criteria = el.pc[cKey];\n                                return {\n                                    id: cKey,\n                                    name: criteria.text\n                                }\n                            })\n                        };\n                    })\n                }\n            })\n        });\n    } catch {\n        reject(new Error('Invalid JSON format.'));\n    }\n}, 0));","import { createOvermind } from 'overmind';\nimport { createHook } from 'overmind-react';\nimport CoursePayload from './course-unit.json';\nimport { unnormalizeCourseJson, normalizeCourseJson } from './utils';\n\nconst FETCH_COURSE_URL = 'https://c2d51dfc-1802-45cb-bcc0-51a3737725f5.mock.pstmn.io/courses/advance-diploma-it';\nconst COURSE_STORAGE_KEY = 'cti-course-key';\n\nconst state = {\n    ui: {\n        isLoadingCourse: false,\n        isLoadingJson: false,\n        showSaveJsonModal: false,\n        isProcessingJson: false,\n        processJsonError: null\n    },\n    course: null,\n    outputJson: null,\n    tags: [],\n    courseTags: null\n}\n\nconst actions = {\n    init: async ({ state, actions, effects }) => {\n        // state.ui.isLoadingCourse = true;\n        // try {\n        //     let course = effects.loadCourseFromStorage();\n\n        //     if(course) {\n        //         state.course = course;\n        //     } else {\n        //         const course = await effects.fetchCourse();\n        //         state.course = await normalizeCourseJson(course);\n        //     }\n        // } catch(e) {\n        //     state.course = CoursePayload;\n        //     console.error(e);\n        // } finally {\n        //     state.ui.isLoadingCourse = false;\n        // }\n        return await Promise.resolve();\n    },\n    updateTag: ({ state, actions }, { tags, unit }) => {\n        const tagValues = tags.map(t => t.id);\n\n        state.tags = [...tagValues];\n        \n        state.course.units = state.course.units.map(u => {\n            if(u.code !== unit.code) {\n                return u;\n            } else {\n                return { ...u, tags: [...state.tags]}\n            }\n        });\n        actions.saveJsonToLocalStorage();\n    },\n    displaySaveModal: ({state}) => {\n        state.ui.showSaveJsonModal = true;\n        state.ui.isLoadingJson = true;\n        setTimeout(() => {\n            state.outputJson = unnormalizeCourseJson(state.course);\n            state.ui.isLoadingJson = false;\n        }, 0);\n    },\n    uploadCourse: ({ state, actions }, courseContent) => {\n        actions.resetJsonProcessState();\n        state.ui.isProcessingJson = true;\n        setTimeout(async () => {\n            try {\n                const json = JSON.parse(courseContent);\n                if(json) {\n                    state.course = await normalizeCourseJson(json);\n                    state.ui.processJsonResult = 'success';\n                    actions.saveJsonToLocalStorage();\n                } else {\n                    state.ui.processJsonResult = 'fail';\n                    state.ui.processJsonError = 'Be smart and set a proper JSON format 🤪'\n                }\n            } catch (e) {\n                state.ui.processJsonResult = 'fail';\n                state.ui.processJsonError = e.message;\n                console.error(e);\n            } finally {\n                state.ui.isProcessingJson = false;\n            } \n        }, 1000);\n    },\n    resetJsonProcessState: ({state}) => {\n        state.ui.isProcessingJson = false;\n        state.ui.processJsonError = null;\n        state.ui.processJsonResult = null;\n    },\n    saveJsonToLocalStorage: ({state}) => {\n        localStorage.setItem(COURSE_STORAGE_KEY, JSON.stringify(state.course));\n    },\n    loadFromStorage: ({state}) => {\n        state.course = CoursePayload;\n    },\n    refreshCourseTags: ({state}) => {\n        if(!state.course) return;\n\n        state.ui.isLoadingCourse = true;\n        setTimeout(() => {\n            try {\n                state.courseTags = state.course.units.reduce((prev, current) => { \n                    const unitName = current.name;\n    \n                    for(let tag of current.tags || []) {\n                        prev = {\n                            ...prev,\n                            [tag]: [\n                                ...(prev[tag] || []),\n                                ...[unitName]\n                            ]\n                        }\n                    }\n                    return prev;\n                }, {});\n            } \n            catch(e) { console.error(e) }\n            finally { state.ui.isLoadingCourse = false; }\n        }, 0);\n    },\n    reorderCourse: ({state, actions}, {sourceIndex, destinationIndex}) => {\n        const result = [...state.course.units];\n        const [ removed ] = result.splice(sourceIndex, 1);\n        result.splice(destinationIndex, 0, removed);\n        state.course.units = result;\n        actions.saveJsonToLocalStorage();\n    }\n}\n\nconst effects = {\n    fetchCourse: async () => {\n        const resp = await fetch(FETCH_COURSE_URL);\n        return await resp.json();\n    },\n    loadCourseFromStorage: () => {\n        const storeItem = localStorage.getItem(COURSE_STORAGE_KEY);\n        let storageCourse = storeItem && JSON.parse(storeItem);\n\n        if(!storageCourse) {\n            storageCourse = CoursePayload;\n        }\n\n        return storageCourse;\n    }\n}\n\nexport const overmind = createOvermind({\n    state,\n    actions,\n    effects\n});\n\nexport const useOvermind = createHook();","import React, { useCallback, useState, useEffect } from 'react';\nimport { useOvermind } from '../overmind';\n\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst parseSelectedTagsOrNull = (tags) => (tags && tags.map(text => ({id: text, text }))) || [];\n\nconst CourseTags = (props) => {\n    // useWhyDidYouUpdate('[course-tags]', props);\n    const { onTagsUpdated } = props;\n    const [ tags, setTags ] = useState(parseSelectedTagsOrNull(props.selectedTags));\n\n    useEffect(() => {\n        setTags(parseSelectedTagsOrNull(props.selectedTags))\n    }, [ setTags, props.selectedTags ] )\n\n    const notifyTagsUpdated = useCallback((tags) => {\n        //console.log('should notify with', { onTagsUpdated, tags });\n        onTagsUpdated && onTagsUpdated(tags)\n    }, [ onTagsUpdated] );\n\n    const handleDelete = useCallback(index => {\n        const newTags = tags.filter((tag, i) => i !== index);\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    const handleAddition = useCallback(tag => {\n        const newTags = [...tags.filter(t => t.id !== tag.id), tag]\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    return (\n        <div>\n            <ReactTags \n                classNames={{\n                    tag: 'ui label',\n                    tagInput: 'ui input'\n                }}\n                tags={tags}\n                allowDragDrop={false}\n                delimiters={delimiters}\n                handleDelete={handleDelete}\n                handleAddition={handleAddition} />\n        </div>\n    );\n}\n\nexport const OvermindedCourseTags = ({ unit }) => {\n    const { state, actions } = useOvermind();\n\n    const stateUnit = state.course.units.filter(u => u.code === unit.code);\n\n    const handleTagSelected = useCallback((tags) => {\n        //console.log('handle called...');\n        actions.updateTag({ unit, tags })\n    }, [ actions, unit ]);\n\n    return <CourseTags\n                tags={state.tags}\n                selectedTags={stateUnit.tags ? [...stateUnit.tags] : []}\n                onTagsUpdated={handleTagSelected}\n            />\n}\n\nexport default CourseTags;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CourseElement from './course-element';\nimport CourseTags from './course-tags';\nimport { Accordion, Icon, Label } from 'semantic-ui-react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst getDragStyles = (isDragging = false) => isDragging ? ({\n    backgroundColor: isDragging ? '#fff8db' : 'white',\n    boxShadow: '0 0 0 1px #b58105 inset, 0 0 0 0 transparent'\n}) : null;\n\nconst CourseUnit = ({ \n    name, \n    code, \n    elements,\n    tags,\n    onTagsUpdated,\n    index\n}) =>\n{\n    const handleTagsUpdated = React.useCallback((tags) => onTagsUpdated(tags), [ onTagsUpdated ]);\n\n    const [ isActive , setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Draggable\n            draggableId={code}\n            index={index}>\n            {(draggableProvided, draggableSnapshot) => (\n                <div \n                    ref={draggableProvided.innerRef}\n                    {...draggableProvided.draggableProps}>\n                        <div style={{paddingBottom: 8}}>\n                            <Accordion \n                                active={isActive.toString()} \n                                fluid \n                                style={getDragStyles(draggableSnapshot.isDragging)}\n                                styled>\n                                <Accordion.Title \n                                    className='disable-selection'\n                                    onClick={toggleActive}>\n                                    <Icon name=\"exchange\"\n                                        flipped='horizontally'\n                                        circular\n                                        color='blue'\n                                        style={{backgroundColor: 'white'}}\n                                        rotated=\"clockwise\"\n                                        {...draggableProvided.dragHandleProps} />\n                                    <Icon name={isActive ? 'caret down' : 'caret right'} />\n                                        {`${code} - ${name}`}\n                                        {tags ? tags.map(tag => <Label key={tag}>{tag}</Label>) : null}\n                                </Accordion.Title>\n                                <Accordion.Content active={isActive}>\n                                    <CourseTags selectedTags={tags} onTagsUpdated={handleTagsUpdated} />\n                                    {elements && elements.map(e => <CourseElement key={e.id} name={e.name} criterias={e.criterias} />)}\n                                </Accordion.Content>\n                            </Accordion>\n                            \n                        </div>\n                </div>\n            )}\n        </Draggable>\n    )\n};\n\nCourseUnit.propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired\n};\n\nexport default CourseUnit;","import React from 'react';\nimport { Modal, Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\nimport ReactJson from 'react-json-view';\nimport FileSaver from 'file-saver';\n\nconst saveJsonContent = (json) => {\n    var blob = new Blob([JSON.stringify(json)], { type: 'application.json;charset=utf-8'});\n    FileSaver.saveAs(blob, 'course-content.json');\n}\n\nconst DownloadCourseModal = ({ modalTrigger }) => {\n    const { state, actions } = useOvermind();\n\n    const handleOnModalOpen = React.useCallback(() => {\n        actions.displaySaveModal();\n    }, [ actions ]);\n\n    const handleSave = React.useCallback(() => {\n        saveJsonContent(state.outputJson);\n    }, [state.outputJson]);\n\n    return (\n        <Modal trigger={modalTrigger} onOpen={handleOnModalOpen}>\n            <Modal.Header>Download Course</Modal.Header>\n            <Modal.Content>\n                <Segment style={{height: 500, overflow: 'auto'}}>\n                    <Dimmer active={state.ui.isLoadingJson}>\n                        <Loader />\n                    </Dimmer>\n                    {state.outputJson && state.ui.isLoadingJson === false\n                    ? <ReactJson \n                        name={false}\n                        style={{overflow: 'auto'}}\n                        onEdit={false} onAdd={false} onDelete={false}\n                        src={state.outputJson} /> \n                    : null}\n                </Segment>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button \n                    loading={state.ui.isLoadingJson}\n                    positive\n                    labelPosition='right'\n                    icon='download'\n                    content='Download'\n                    onClick={handleSave}\n                />\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default DownloadCourseModal;","import React, { useCallback } from 'react';\nimport { useOvermind } from '../overmind';\nimport { Modal, Button, Form, TextArea, Message,\n    Header,\n    Dimmer, Loader, Segment, Icon } from 'semantic-ui-react';\n\nconst UploadCourseModal = ({modalTrigger}) => {\n    const { state, actions } = useOvermind();\n    \n    const [ courseContent, setCourseContent ] = React.useState(null);\n\n    const modalRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if(state.ui.processJsonResult === 'success') {\n            const timeoutId = setTimeout(() => modalRef.current.handleClose(), 2000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [ state.ui.processJsonResult ]);\n\n    const handleTextChanged = useCallback(event => {\n        const textContent = event.target.value;\n        setCourseContent(textContent);\n    }, [ setCourseContent ]);\n\n    const handleUploadCourse = useCallback(() => {\n        actions.uploadCourse(courseContent);\n    }, [ courseContent, actions ]);\n\n    const handleModalClosed = useCallback(() => {\n        actions.resetJsonProcessState();\n    }, [ actions ]);\n\n    return (\n        <Modal\n            ref={modalRef}\n            trigger={modalTrigger}\n            onClose={handleModalClosed}\n            closeOnEscape={state.ui.isProcessingJson === false}\n            closeOnDimmerClick={state.ui.isProcessingJson === false}>\n            <Modal.Header>Course Upload</Modal.Header>\n            <Modal.Content>\n                <Dimmer active={state.ui.isProcessingJson}>\n                    <Loader />\n                </Dimmer>\n                {state.ui.processJsonError \n                    ? (<Message color='red'>\n                            <Icon name='bug' color='red' size='large' />\n                            {state.ui.processJsonError}\n                        </Message>)\n                    : null }\n\n                {state.ui.processJsonResult === 'success'\n                    ? <Segment textAlign='center'>\n                        <Icon size='massive' color='green' name='hand peace outline' />\n                        <Header color='green' as=\"h2\">Course JSON uploaded</Header>\n                    </Segment>\n                    : (<Form>\n                        <TextArea \n                            rows={10}\n                            onChange={handleTextChanged}\n                            placeholder='Paste the JSON content here' />\n                    </Form>)}\n            </Modal.Content>\n            <Modal.Actions>\n                {state.ui.processJsonResult === 'success' \n                    ? null\n                    : (<Button\n                        disabled={Boolean(courseContent) === false}\n                        positive\n                        labelPosition='right'\n                        icon='upload'\n                        content='Upload'\n                        onClick={handleUploadCourse}\n                    />)}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default UploadCourseModal;","import React from 'react';\nimport { Card, List, Message, Icon } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\n\nconst colours = [\n    'yellow',\n    'orange',\n    'green',\n    'teal',\n    'blue',\n    'purple',\n    'pink',\n    'red',\n    'black'\n];\n\nconst getRandomColour = (index) => {\n    if(index < colours.length) return colours[index];\n    const min = 0;\n    const max = colours.length - 1;\n    return colours[Math.floor(Math.random() * (max - min + 1)) + min];\n}\n\nconst TagGroup = ({ name, units, color }) => {\n    return (<Card color={color}>\n        <Card.Content>\n            <Card.Header><Icon name='tag' color={color} />{name}</Card.Header>\n            <Card.Description>\n                <List>\n                    {units.map(u => (<List.Item key={u}><Icon name='circle outline' />{u}</List.Item>))}\n                </List>\n            </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n            {units.length} unit(s)\n        </Card.Content>\n    </Card>)\n}\n\nconst UnitsTaggedGroup = () => {\n\n    const { state, actions } = useOvermind();\n\n    React.useEffect(() => {\n        actions.refreshCourseTags();\n    }, []);\n\n    const courseTags = React.useMemo(() => {\n        if(!state.courseTags) return null;\n        return Object.keys(state.courseTags).map((name, index) => ({\n            name, units: state.courseTags[name], color: getRandomColour(index)\n        }));\n    }, [ state.courseTags ]);\n\n    if(!courseTags || courseTags.length === 0) {\n        return (<Message color='blue'><Icon name='info' />Add tag to at least one unit.</Message>)\n    }\n\n    return (<Card.Group>\n        {courseTags.map(c => (<TagGroup key={c.name} {...c} />))}\n    </Card.Group>);\n}\n\nexport default UnitsTaggedGroup","import React from 'react';\nimport CourseUnit from './course-unit';\nimport { useOvermind } from '../overmind';\nimport { Menu, Icon, Message, Tab } from 'semantic-ui-react';\nimport DownloadCourseModal from './download-course-modal';\nimport UploadCourseModal from './upload-course-modal';\nimport UnitsTaggedGroup from './units-tagged-group';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nconst CourseUnits = ({units, onTagsUpdated}) => {\n\n    return (\n            <Droppable \n                droppableId=\"droppable\"\n            >\n                {(droppableProvided, droppableSnapshot) => {\n                    return (<div ref={droppableProvided.innerRef}>\n                        {units.map((u, index) => (<CourseUnit\n                                            key={u.code}\n                                            onTagsUpdated={onTagsUpdated(u)}\n                                            tags={u.tags}\n                                            name={u.name} \n                                            code={u.code} \n                                            index={index}\n                                            elements={u.elements} />))}\n                        {droppableProvided.placeholder}\n                    </div>)\n                }}\n            </Droppable>\n    )\n};\n\nconst Course = () => {\n\n    const { state, actions } = useOvermind();\n\n    const { name, code, units } = state.course || {};\n\n    const handleTagsUpdated = React.useCallback((unit) => (tags) => actions.updateTag({ unit, tags }), [ actions ]);\n\n    const handleDragEnd = React.useCallback((result) => {\n        if(!result.destination) {\n            return;\n        }\n\n        // console.log('onDragEnd', { result });\n\n        actions.reorderCourse({\n            sourceIndex: result.source.index,\n            destinationIndex: result.destination.index\n        });\n    }, [ actions ]);\n\n    if(!state.course) \n    {\n        return (<Message color='yellow'><Icon name='warning'></Icon>No course uploaded...</Message>);\n    }\n\n    const panes = [\n        { \n            menuItem: { key: 'course-units', icon: 'list', content: 'Units' },\n            render: () => (<Tab.Pane>\n                <DragDropContext onDragEnd={handleDragEnd}>\n                    <CourseUnits units={units} onTagsUpdated={handleTagsUpdated} />\n                </DragDropContext>\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'course-group', icon: 'sitemap', content: 'Units Grouped by Tag'},\n            render: () => <Tab.Pane><UnitsTaggedGroup /></Tab.Pane>\n        }\n    ]\n\n    return (\n        <div>\n            <Menu>\n                <h2 style={{padding: '5px 20px'}}>{code} - {name}</h2>\n                <Menu.Menu position='right'>\n                    <UploadCourseModal modalTrigger={<Menu.Item color='violet' active={true}>\n                        <Icon name='upload'></Icon>\n                        <strong>Upload JSON</strong>\n                    </Menu.Item>} />\n                    \n                    <DownloadCourseModal\n                        modalTrigger={(\n                            <Menu.Item color='green' active={true}>\n                                <Icon name=\"download\"></Icon>\n                                <strong>Download JSON</strong>\n                            </Menu.Item>\n                        )}\n                    />\n                </Menu.Menu>\n            </Menu>\n\n            <Tab panes={panes} />\n        </div>\n    );\n}\n\nexport default Course;","import React from 'react';\nimport Course from '../components/course';\nimport {useOvermind} from '../overmind';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Page = () => {\n    const { state } = useOvermind();\n\n    return (\n        <div>\n            <Dimmer active={state.ui.isLoadingCourse}>\n                <Loader />\n            </Dimmer>\n            <Course />\n        </div>\n    );\n};\n\nexport default Page;","import React from 'react';\nimport './App.css';\nimport CoursePage from './pages/course-page';\nimport { useOvermind } from './overmind';\nimport { Button, Icon } from 'semantic-ui-react';\nimport UploadCourseModal from './components/upload-course-modal';\n\nconst OptionsContainer = ({ showCurrentCourse }) => {\n  return (\n    <div>\n      <UploadCourseModal modalTrigger={<Button color='violet' active={true}>\n            <Icon name='upload'></Icon>\n            <strong>Upload JSON</strong>\n        </Button>} />\n\n        <Button color=\"orange\" onClick={showCurrentCourse}>\n            <strong>Show Original Course</strong>\n        </Button>\n        \n    </div>\n  );\n}\n\nfunction App() {\n\n  const { actions, state } = useOvermind();\n\n  React.useEffect(() => {\n    actions.init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const showCurrentCourse = () => {\n    actions.loadFromStorage();\n  }\n\n  return (\n    <div>\n      <div id=\"nav\">\n        <img \n          style={{height: 40}}\n          src=\"https://my.cti.qld.edu.au/pluginfile.php/1/core_admin/logocompact/0x70/1559616009/logo-lg-white.png\" \n          alt=\"CTI Logo\" />\n      </div>\n      <div id=\"page-content\">\n\n      {\n        state.course === null\n        ? <OptionsContainer showCurrentCourse={showCurrentCourse} />\n        : <CoursePage />\n      }\n\n          {/* <CoursePage /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider as OvermindProvider } from 'overmind-react';\nimport { overmind } from './overmind';\n\n\nReactDOM.render(\n    <OvermindProvider value={overmind}>\n        <App />\n    </OvermindProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}