{"version":3,"sources":["components/course-element.js","utils.js","overmind.js","components/course-tags.js","components/course-unit.js","components/download-course-modal.js","components/upload-course-modal.js","components/units-tagged-group.js","components/course.js","pages/course-page.js","App.js","serviceWorker.js","index.js"],"names":["CourseElement","_ref","name","criterias","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isActive","setActive","toggleActive","useCallback","a","react_default","createElement","Accordion","Title","active","onClick","Icon","Content","style","padding","map","c","Message","key","id","normalizeCourseJson","input","Promise","resolve","reject","setTimeout","code","units","u","tags","elements","keys","EPC","eKey","el","pc","cKey","text","_unused","Error","actions","init","_init","asyncToGenerator","regenerator_default","mark","_callee","state","effects","course","_course","wrap","_context","prev","next","ui","isLoadingCourse","loadCourseFromStorage","fetchCourse","sent","t0","CoursePayload","console","error","finish","stop","_x","apply","this","arguments","updateTag","_ref2","_ref3","unit","tagValues","t","toConsumableArray","objectSpread","saveJsonToLocalStorage","displaySaveModal","_ref4","showSaveJsonModal","isLoadingJson","outputJson","reduce","previous","current","defineProperty","uploadCourse","_ref5","courseContent","resetJsonProcessState","isProcessingJson","_callee2","json","_context2","JSON","parse","processJsonResult","processJsonError","message","_ref7","_ref8","localStorage","setItem","stringify","refreshCourseTags","_ref9","courseTags","unitName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","tag","value","concat","err","return","log","check","e","reorderCourse","_ref10","_ref11","sourceIndex","destinationIndex","result","_result$splice","splice","removed","_fetchCourse","_callee3","resp","_context3","fetch","abrupt","storeItem","getItem","overmind","createOvermind","useOvermind","createHook","delimiters","parseSelectedTagsOrNull","CourseTags","props","onTagsUpdated","_useState","selectedTags","_useState2","setTags","useEffect","notifyTagsUpdated","handleDelete","index","newTags","filter","i","handleAddition","ReactTags","classNames","tagInput","allowDragDrop","CourseUnit","handleTagsUpdated","toString","fluid","styled","Label","course_tags","course_element","DownloadCourseModal","modalTrigger","_useOvermind","handleOnModalOpen","handleSave","blob","Blob","type","FileSaver","saveAs","saveJsonContent","Modal","trigger","onOpen","Header","Segment","height","overflow","Dimmer","Loader","main_default","onEdit","onAdd","onDelete","src","Actions","Button","loading","positive","labelPosition","icon","content","UploadCourseModal","setCourseContent","modalRef","useRef","timeoutId","handleClose","clearTimeout","handleTextChanged","event","textContent","target","handleUploadCourse","handleModalClosed","ref","onClose","closeOnEscape","closeOnDimmerClick","color","size","textAlign","as","Form","TextArea","rows","onChange","placeholder","disabled","Boolean","colours","getRandomColour","length","max","Math","floor","random","TagGroup","Card","Description","List","Item","extra","UnitsTaggedGroup","useMemo","Group","units_tagged_group_TagGroup","assign","CourseUnits","react_beautiful_dnd_esm","droppableId","droppableProvided","droppableSnapshot","innerRef","draggableId","draggableProvided","draggableSnapshot","draggableProps","dragHandleProps","components_course_unit","Course","handUpdate","handleDragEnd","destination","source","panes","menuItem","render","Tab","Pane","onDragEnd","course_CourseUnits","units_tagged_group","Menu","position","upload_course_modal","download_course_modal","Page","objectDestructuringEmpty","components_course","App","alt","course_page","window","location","hostname","match","ReactDOM","overmind_react_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oxhCAsCeA,EAlCO,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,UAAeC,EACTC,IAAMC,UAAS,GADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACjCM,EADiCH,EAAA,GACvBI,EADuBJ,EAAA,GAGnCK,EAAeP,IAAMQ,YAAY,WACnCF,EAAU,SAAAG,GAAC,OAAKA,KACjB,CAAEH,IAEL,OACII,EAAAD,EAAAE,cAACC,EAAA,EAAD,KACIF,EAAAD,EAAAE,cAACC,EAAA,EAAUC,MAAX,CAAiBC,OAAQT,EAAUU,QAASR,GACxCG,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,aACVA,GAELa,EAAAD,EAAAE,cAACC,EAAA,EAAUK,QAAX,CAAmBH,OAAQT,GACvBK,EAAAD,EAAAE,cAAA,OAAKO,MAAO,CAACC,QAAS,qBACjBrB,GAAaA,EAAUsB,IAAI,SAAAC,GAAC,OAAIX,EAAAD,EAAAE,cAACW,EAAA,EAAD,CAASC,IAAKF,EAAEG,IAAKH,EAAExB,iGCoB/D4B,EAAsB,SAACC,GAAD,OAAW,IAAIC,QAAQ,SAACC,EAASC,GAAV,OAAqBC,WAAW,WACtF,IACIF,EAAQ,CACJ/B,KAAM6B,EAAM7B,KACZkC,KAAML,EAAMK,KACZC,MAAON,EAAMM,MAAMZ,IAAI,SAAAa,GACnB,MAAO,CACHpC,KAAMoC,EAAEpC,KACRkC,KAAME,EAAEF,KACRG,KAAMD,EAAEC,MAAQ,GAChBC,SAAUhC,OAAOiC,KAAKH,EAAEI,KAAKjB,IAAI,SAAAkB,GAC7B,IAAMC,EAAKN,EAAEI,IAAIC,GACjB,MAAO,CACHd,GAAIc,EACJzC,KAAM0C,EAAG1C,KACTC,UAAWK,OAAOiC,KAAKG,EAAGC,IAAIpB,IAAI,SAAAqB,GAE9B,MAAO,CACHjB,GAAIiB,EACJ5C,KAHa0C,EAAGC,GAAGC,GAGJC,gBAQ7C,MAAAC,GACEd,EAAO,IAAIe,MAAM,2BAEtB,MC/CGC,EAAU,CACZC,KAAI,eAAAC,EAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,EAAAxC,EAAAyC,KAAE,SAAAC,EAAAvD,GAAA,IAAAwD,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAxC,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAASP,EAATxD,EAASwD,MAATxD,EAAgBiD,QAASQ,EAAzBzD,EAAyByD,QAC3BD,EAAMQ,GAAGC,iBAAkB,EADzBJ,EAAAC,KAAA,IAGMJ,EAASD,EAAQS,yBAHvB,CAAAL,EAAAE,KAAA,QAMMP,EAAME,OAASA,EANrBG,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAQ2BN,EAAQU,cARnC,eAQYT,EARZG,EAAAO,KAAAP,EAAAE,KAAA,GAS2BlC,EAAoB6B,GAT/C,QASMF,EAAME,OATZG,EAAAO,KAAA,QAAAP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAYEL,EAAME,OAASY,EACfC,QAAQC,MAARX,EAAAQ,IAbF,eAAAR,EAAAC,KAAA,GAeEN,EAAMQ,GAAGC,iBAAkB,EAf7BJ,EAAAY,OAAA,6BAAAZ,EAAAa,SAAAnB,EAAA,wBAAF,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GAkBJC,UAAW,SAAAC,EAAAC,GAAwC,IAArCzB,EAAqCwB,EAArCxB,MAAOP,EAA8B+B,EAA9B/B,QAAaX,EAAiB2C,EAAjB3C,KAAM4C,EAAWD,EAAXC,KAC9BC,EAAY7C,EAAKd,IAAI,SAAA4D,GAAC,OAAIA,EAAExD,KAElC4B,EAAMlB,KAAN/B,OAAA8E,EAAA,EAAA9E,CAAiB4E,GAEjB3B,EAAME,OAAOtB,MAAQoB,EAAME,OAAOtB,MAAMZ,IAAI,SAAAa,GACxC,OAAGA,EAAEF,OAAS+C,EAAK/C,KACRE,EAEA9B,OAAA+E,EAAA,EAAA/E,CAAA,GAAK8B,EAAZ,CAAeC,KAAK/B,OAAA8E,EAAA,EAAA9E,CAAKiD,EAAMlB,UAGvCW,EAAQsC,0BAEZC,iBAAkB,SAAAC,GAAa,IAAXjC,EAAWiC,EAAXjC,MAChBA,EAAMQ,GAAG0B,mBAAoB,EAC7BlC,EAAMQ,GAAG2B,eAAgB,EACzBzD,WAAW,WDnCkB,IAACJ,ECoC1B0B,EAAMoC,WDnCC,CACX3F,MAF8B6B,ECoCe0B,EAAME,QDlCvCzD,KACZkC,KAAML,EAAMK,KACZC,MAAON,EAAMM,MAAMZ,IAAI,SAAA0D,GACnB,MAAO,CACHjF,KAAMiF,EAAKjF,KACXkC,KAAM+C,EAAK/C,KACXG,KAAM4C,EAAK5C,KACXG,KArBcF,EAqBY2C,EAAK3C,SApBpCA,EAASsD,OAAO,SAACC,EAAUC,GAC9B,OAAOxF,OAAA+E,EAAA,EAAA/E,CAAA,GACAuF,EADPvF,OAAAyF,EAAA,EAAAzF,CAAA,GAEKwF,EAAQnE,GAAK,CACV3B,KAAM8F,EAAQ9F,KACd2C,IAfe1C,EAeW6F,EAAQ7F,UAdvCA,EAAU2F,OAAO,SAACC,EAAUC,GAC/B,OAAOxF,OAAA+E,EAAA,EAAA/E,CAAA,GACAuF,EADPvF,OAAAyF,EAAA,EAAAzF,CAAA,GAEKwF,EAAQnE,GAAK,CAAEkB,KAAMiD,EAAQ9F,SAEnC,QANuB,IAACC,GAkBxB,MATsB,IAACqC,KCiDlBiB,EAAMQ,GAAG2B,eAAgB,GAC1B,IAEPM,aAAc,SAAAC,EAAqBC,GAAkB,IAApC3C,EAAoC0C,EAApC1C,MAAoC0C,EAA7BjD,QACZmD,wBACR5C,EAAMQ,GAAGqC,kBAAmB,EAC5BnE,WAAU3B,OAAA6C,EAAA,EAAA7C,CAAA8C,EAAAxC,EAAAyC,KAAC,SAAAgD,IAAA,IAAAC,EAAA,OAAAlD,EAAAxC,EAAA+C,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,UAAAyC,EAAA1C,KAAA,IAEGyC,EAAOE,KAAKC,MAAMP,IAFrB,CAAAK,EAAAzC,KAAA,eAAAyC,EAAAzC,KAAA,EAIsBlC,EAAoB0E,GAJ1C,OAIC/C,EAAME,OAJP8C,EAAApC,KAKCZ,EAAMQ,GAAG2C,kBAAoB,UAL9BH,EAAAzC,KAAA,gBAOCP,EAAMQ,GAAG2C,kBAAoB,OAC7BnD,EAAMQ,GAAG4C,iBAAmB,qDAR7B,QAAAJ,EAAAzC,KAAA,iBAAAyC,EAAA1C,KAAA,GAAA0C,EAAAnC,GAAAmC,EAAA,SAWHhD,EAAMQ,GAAG2C,kBAAoB,OAC7BnD,EAAMQ,GAAG4C,iBAAmBJ,EAAAnC,GAAEwC,QAC9BtC,QAAQC,MAARgC,EAAAnC,IAbG,eAAAmC,EAAA1C,KAAA,GAeHN,EAAMQ,GAAGqC,kBAAmB,EAfzBG,EAAA/B,OAAA,6BAAA+B,EAAA9B,SAAA4B,EAAA,wBAiBR,MAEPF,sBAAuB,SAAAU,GAAa,IAAXtD,EAAWsD,EAAXtD,MACrBA,EAAMQ,GAAGqC,kBAAmB,EAC5B7C,EAAMQ,GAAG4C,iBAAmB,KAC5BpD,EAAMQ,GAAG2C,kBAAoB,MAEjCpB,uBAAwB,SAAAwB,GAAa,IAAXvD,EAAWuD,EAAXvD,MACtBwD,aAAaC,QArFM,iBAqFsBR,KAAKS,UAAU1D,EAAME,UAElEyD,kBAAmB,SAAAC,GAAa,IAAX5D,EAAW4D,EAAX5D,MACbA,EAAME,SAEVF,EAAMQ,GAAGC,iBAAkB,EAC3B/B,WAAW,WACP,IACIsB,EAAM6D,WAAa7D,EAAME,OAAOtB,MAAMyD,OAAO,SAAC/B,EAAMiC,GAChD,IAAMuB,EAAWvB,EAAQ9F,KADmCsH,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG5D,QAAAC,EAAAC,GAAe7B,EAAQzD,MAAQ,IAA/BuF,OAAAC,cAAAP,GAAAI,EAAAC,EAAA7D,QAAAgE,MAAAR,GAAA,EAAmC,KAA3BS,EAA2BL,EAAAM,MAC/BnE,EAAIvD,OAAA+E,EAAA,EAAA/E,CAAA,GACGuD,EADHvD,OAAAyF,EAAA,EAAAzF,CAAA,GAECyH,EAFD,GAAAE,OAAA3H,OAAA8E,EAAA,EAAA9E,CAGQuD,EAAKkE,IAAQ,IACd,CAACV,OAR4C,MAAAa,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAY5D,OAAO3D,GACR,IAEHS,QAAQ8D,IAAI,oBAAqB,CAC7BC,MAAO9E,EAAM6D,aAGrB,MAAMkB,GAAKhE,QAAQC,MAAM+D,GApBzB,QAqBU/E,EAAMQ,GAAGC,iBAAkB,IACtC,KAEPuE,cAAe,SAAAC,EAAAC,GAA8C,IAA5ClF,EAA4CiF,EAA5CjF,MAASmF,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,iBAC7BC,EAAMtI,OAAA8E,EAAA,EAAA9E,CAAOiD,EAAME,OAAOtB,OADyB0G,EAErCD,EAAOE,OAAOJ,EAAa,GAAvCK,EAFiDzI,OAAAC,EAAA,EAAAD,CAAAuI,EAAA,MAGzDD,EAAOE,OAAOH,EAAkB,EAAGI,GACnCxF,EAAME,OAAOtB,MAAQyG,IAIvBpF,EAAU,CACZU,YAAW,eAAA8E,EAAA1I,OAAA6C,EAAA,EAAA7C,CAAA8C,EAAAxC,EAAAyC,KAAE,SAAA4F,IAAA,IAAAC,EAAA,OAAA9F,EAAAxC,EAAA+C,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAAAqF,EAAArF,KAAA,EACUsF,MA/HF,yFA8HR,cACHF,EADGC,EAAAhF,KAAAgF,EAAArF,KAAA,EAEIoF,EAAK5C,OAFT,cAAA6C,EAAAE,OAAA,SAAAF,EAAAhF,MAAA,wBAAAgF,EAAA1E,SAAAwE,MAAF,yBAAAD,EAAArE,MAAAC,KAAAC,YAAA,GAIXZ,sBAAuB,WACnB,IAAMqF,EAAYvC,aAAawC,QAlIZ,kBAmInB,OAAOD,GAAa9C,KAAKC,MAAM6C,KAI1BE,EAAWC,YAAe,CACnClG,MAtIU,CACVQ,GAAI,CACAC,iBAAiB,EACjB0B,eAAe,EACfD,mBAAmB,EACnBW,kBAAkB,EAClBO,iBAAkB,MAEtBlD,OAAQ,KACRkC,WAAY,KACZtD,KAAM,GACN+E,WAAY,MA4HZpE,UACAQ,YAGSkG,EAAcC,uBC3I3B,IAKMC,EAAa,CAJR,IACA,IAULC,EAA0B,SAACxH,GAAD,OAAWA,GAAQA,EAAKd,IAAI,SAAAsB,GAAI,MAAK,CAAClB,GAAIkB,EAAMA,WAAa,IAEvFiH,EAAa,SAACC,GAAU,IAElBC,EAAkBD,EAAlBC,cAFkBC,EAGA7J,mBAASyJ,EAAwBE,EAAMG,eAHvCC,EAAA7J,OAAAC,EAAA,EAAAD,CAAA2J,EAAA,GAGlB5H,EAHkB8H,EAAA,GAGZC,EAHYD,EAAA,GAK1BE,oBAAU,WACND,EAAQP,EAAwBE,EAAMG,gBACvC,CAAEE,EAASL,EAAMG,eAEpB,IAAMI,EAAoB3J,sBAAY,SAAC0B,GAEnC2H,GAAiBA,EAAc3H,IAChC,CAAE2H,IAECO,EAAe5J,sBAAY,SAAA6J,GAC7B,IAAMC,EAAUpI,EAAKqI,OAAO,SAAC3C,EAAK4C,GAAN,OAAYA,IAAMH,IAC9CF,EAAkBG,IACnB,CAAEpI,EAAMiI,IAELM,EAAiBjK,sBAAY,SAAAoH,GAC/B,IAAM0C,EAAO,GAAAxC,OAAA3H,OAAA8E,EAAA,EAAA9E,CAAO+B,EAAKqI,OAAO,SAAAvF,GAAC,OAAIA,EAAExD,KAAOoG,EAAIpG,MAArC,CAA0CoG,IACvDuC,EAAkBG,IACnB,CAAEpI,EAAMiI,IAEX,OACIzJ,EAAAD,EAAAE,cAAA,WACID,EAAAD,EAAAE,cAAC+J,EAAA,YAAD,CACIC,WAAY,CACR/C,IAAK,WACLgD,SAAU,YAEd1I,KAAMA,EACN2I,eAAe,EACfpB,WAAYA,EACZW,aAAcA,EACdK,eAAgBA,MAsBjBd,aCrCAmB,EApCI,SAAAlL,GAOnB,IANIC,EAMJD,EANIC,KACAkC,EAKJnC,EALImC,KACAI,EAIJvC,EAJIuC,SACAD,EAGJtC,EAHIsC,KACA2H,EAEJjK,EAFIiK,cAGMkB,EAAoB/K,IAAMQ,YAAY,SAAC0B,GAAD,OAAU2H,EAAc3H,IAAO,IAD/EnC,EAGqCC,IAAMC,UAAS,GAHpDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGYM,EAHZH,EAAA,GAGuBI,EAHvBJ,EAAA,GAKUK,EAAeP,IAAMQ,YAAY,WACnCF,EAAU,SAAAG,GAAC,OAAKA,KACjB,CAAEH,IAEL,OACII,EAAAD,EAAAE,cAACC,EAAA,EAAD,CAAWE,OAAQT,EAAS2K,WAAYC,OAAK,EAACC,QAAM,GAChDxK,EAAAD,EAAAE,cAACC,EAAA,EAAUC,MAAX,CAAiBE,QAASR,GACtBG,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,aADf,GAAAiI,OAEQ/F,EAFR,OAAA+F,OAEkBjI,GACbqC,EAAOA,EAAKd,IAAI,SAAAwG,GAAG,OAAIlH,EAAAD,EAAAE,cAACwK,EAAA,EAAD,CAAO5J,IAAKqG,GAAMA,KAAgB,MAE9DlH,EAAAD,EAAAE,cAACC,EAAA,EAAUK,QAAX,CAAmBH,OAAQT,GACvBK,EAAAD,EAAAE,cAACyK,EAAD,CAAYrB,aAAc7H,EAAM2H,cAAekB,IAC9C5I,GAAYA,EAASf,IAAI,SAAA+G,GAAC,OAAIzH,EAAAD,EAAAE,cAAC0K,EAAD,CAAe9J,IAAK4G,EAAE3G,GAAI3B,KAAMsI,EAAEtI,KAAMC,UAAWqI,EAAErI,oHCsBrFwL,EA1Ca,SAAA1L,GAAsB,IAAnB2L,EAAmB3L,EAAnB2L,aAAmBC,EACnBjC,IAAnBnG,EADsCoI,EACtCpI,MAAOP,EAD+B2I,EAC/B3I,QAET4I,EAAoBzL,IAAMQ,YAAY,WACxCqC,EAAQuC,oBACT,CAAEvC,IAEC6I,EAAa1L,IAAMQ,YAAY,YAZjB,SAAC2F,GACrB,IAAIwF,EAAO,IAAIC,KAAK,CAACvF,KAAKS,UAAUX,IAAQ,CAAE0F,KAAM,mCACpDC,IAAUC,OAAOJ,EAAM,uBAWnBK,CAAgB5I,EAAMoC,aACvB,CAACpC,EAAMoC,aAEV,OACI9E,EAAAD,EAAAE,cAACsL,EAAA,EAAD,CAAOC,QAASX,EAAcY,OAAQV,GAClC/K,EAAAD,EAAAE,cAACsL,EAAA,EAAMG,OAAP,wBACA1L,EAAAD,EAAAE,cAACsL,EAAA,EAAMhL,QAAP,KACIP,EAAAD,EAAAE,cAAC0L,EAAA,EAAD,CAASnL,MAAO,CAACoL,OAAQ,IAAKC,SAAU,SACpC7L,EAAAD,EAAAE,cAAC6L,EAAA,EAAD,CAAQ1L,OAAQsC,EAAMQ,GAAG2B,eACrB7E,EAAAD,EAAAE,cAAC8L,EAAA,EAAD,OAEHrJ,EAAMoC,aAAyC,IAA3BpC,EAAMQ,GAAG2B,cAC5B7E,EAAAD,EAAAE,cAAC+L,EAAAjM,EAAD,CACEZ,MAAM,EACNqB,MAAO,CAACqL,SAAU,QAClBI,QAAQ,EAAOC,OAAO,EAAOC,UAAU,EACvCC,IAAK1J,EAAMoC,aACb,OAGV9E,EAAAD,EAAAE,cAACsL,EAAA,EAAMc,QAAP,KACIrM,EAAAD,EAAAE,cAACqM,EAAA,EAAD,CACIC,QAAS7J,EAAMQ,GAAG2B,cAClB2H,UAAQ,EACRC,cAAc,QACdC,KAAK,WACLC,QAAQ,WACRtM,QAAS2K,kCCqCd4B,EA7EW,SAAA1N,GAAoB,IAAlB2L,EAAkB3L,EAAlB2L,aAAkBC,EACfjC,IAAnBnG,EADkCoI,EAClCpI,MAAOP,EAD2B2I,EAC3B3I,QAD2B9C,EAGEC,IAAMC,SAAS,MAHjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAGlCgG,EAHkC7F,EAAA,GAGnBqN,EAHmBrN,EAAA,GAKpCsN,EAAWxN,IAAMyN,OAAO,MAE9BzN,IAAMkK,UAAU,WACZ,GAAkC,YAA/B9G,EAAMQ,GAAG2C,kBAAiC,CACzC,IAAMmH,EAAY5L,WAAW,kBAAM0L,EAAS7H,QAAQgI,eAAe,KACnE,OAAO,kBAAMC,aAAaF,MAE/B,CAAEtK,EAAMQ,GAAG2C,oBAEd,IAAMsH,EAAoBrN,sBAAY,SAAAsN,GAClC,IAAMC,EAAcD,EAAME,OAAOnG,MACjC0F,EAAiBQ,IAClB,CAAER,IAECU,EAAqBzN,sBAAY,WACnC2D,QAAQ8D,IAAI,iBAAkB,CAC1BlC,kBAEJlD,EAAQgD,aAAaE,IACtB,CAAEA,EAAelD,IAEdqL,EAAoB1N,sBAAY,WAClCqC,EAAQmD,yBACT,CAAEnD,IAEL,OACInC,EAAAD,EAAAE,cAACsL,EAAA,EAAD,CACIkC,IAAKX,EACLtB,QAASX,EACT6C,QAASF,EACTG,eAA6C,IAA9BjL,EAAMQ,GAAGqC,iBACxBqI,oBAAkD,IAA9BlL,EAAMQ,GAAGqC,kBAC7BvF,EAAAD,EAAAE,cAACsL,EAAA,EAAMG,OAAP,sBACA1L,EAAAD,EAAAE,cAACsL,EAAA,EAAMhL,QAAP,KACIP,EAAAD,EAAAE,cAAC6L,EAAA,EAAD,CAAQ1L,OAAQsC,EAAMQ,GAAGqC,kBACrBvF,EAAAD,EAAAE,cAAC8L,EAAA,EAAD,OAEHrJ,EAAMQ,GAAG4C,iBACH9F,EAAAD,EAAAE,cAACW,EAAA,EAAD,CAASiN,MAAM,OACV7N,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,MAAM0O,MAAM,MAAMC,KAAK,UACjCpL,EAAMQ,GAAG4C,kBAEhB,KAE0B,YAA/BpD,EAAMQ,GAAG2C,kBACJ7F,EAAAD,EAAAE,cAAC0L,EAAA,EAAD,CAASoC,UAAU,UACjB/N,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMwN,KAAK,UAAUD,MAAM,QAAQ1O,KAAK,uBACxCa,EAAAD,EAAAE,cAACyL,EAAA,EAAD,CAAQmC,MAAM,QAAQG,GAAG,MAAzB,yBAEDhO,EAAAD,EAAAE,cAACgO,EAAA,EAAD,KACCjO,EAAAD,EAAAE,cAACiO,EAAA,EAAD,CACIC,KAAM,GACNC,SAAUjB,EACVkB,YAAY,kCAG5BrO,EAAAD,EAAAE,cAACsL,EAAA,EAAMc,QAAP,KACoC,YAA/B3J,EAAMQ,GAAG2C,kBACJ,KACC7F,EAAAD,EAAAE,cAACqM,EAAA,EAAD,CACCgC,UAAqC,IAA3BC,QAAQlJ,GAClBmH,UAAQ,EACRC,cAAc,QACdC,KAAK,SACLC,QAAQ,SACRtM,QAASkN,yBCxE3BiB,EAAU,CACZ,SACA,SACA,QACA,OACA,OACA,SACA,OACA,MACA,SAGEC,EAAkB,SAAC9E,GACrB,GAAGA,EAAQ6E,EAAQE,OAAQ,OAAOF,EAAQ7E,GAC1C,IACMgF,EAAMH,EAAQE,OAAS,EAC7B,OAAOF,EAAQI,KAAKC,MAAMD,KAAKE,UAAYH,EAF/B,EAE2C,IAF3C,IAKVI,GAAW,SAAA7P,GAA4B,IAAzBC,EAAyBD,EAAzBC,KAAMmC,EAAmBpC,EAAnBoC,MAAOuM,EAAY3O,EAAZ2O,MAC7B,OAAQ7N,EAAAD,EAAAE,cAAC+O,EAAA,EAAD,CAAMnB,MAAOA,GACjB7N,EAAAD,EAAAE,cAAC+O,EAAA,EAAKzO,QAAN,KACIP,EAAAD,EAAAE,cAAC+O,EAAA,EAAKtD,OAAN,KAAa1L,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,MAAM0O,MAAOA,IAAU1O,GAC/Ca,EAAAD,EAAAE,cAAC+O,EAAA,EAAKC,YAAN,KACIjP,EAAAD,EAAAE,cAACiP,EAAA,EAAD,KACK5N,EAAMZ,IAAI,SAAAa,GAAC,OAAKvB,EAAAD,EAAAE,cAACiP,EAAA,EAAKC,KAAN,CAAWtO,IAAKU,GAAGvB,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,mBAAoBoC,QAI/EvB,EAAAD,EAAAE,cAAC+O,EAAA,EAAKzO,QAAN,CAAc6O,OAAK,GACd9N,EAAMoN,OADX,cA8BOW,GAxBU,WAAM,IAAAvE,EAEAjC,IAAnBnG,EAFmBoI,EAEnBpI,MAAOP,EAFY2I,EAEZ3I,QAEf7C,IAAMkK,UAAU,WACZrH,EAAQkE,qBACT,IAEH,IAAME,EAAajH,IAAMgQ,QAAQ,WAC7B,OAAI5M,EAAM6D,WACH9G,OAAOiC,KAAKgB,EAAM6D,YAAY7F,IAAI,SAACvB,EAAMwK,GAAP,MAAkB,CACvDxK,OAAMmC,MAAOoB,EAAM6D,WAAWpH,GAAO0O,MAAOY,EAAgB9E,MAFnC,MAI9B,CAAEjH,EAAM6D,aAEX,OAAIA,GAAoC,IAAtBA,EAAWmI,OAIrB1O,EAAAD,EAAAE,cAAC+O,EAAA,EAAKO,MAAN,KACHhJ,EAAW7F,IAAI,SAAAC,GAAC,OAAKX,EAAAD,EAAAE,cAACuP,GAAD/P,OAAAgQ,OAAA,CAAU5O,IAAKF,EAAExB,MAAUwB,OAJzCX,EAAAD,EAAAE,cAACW,EAAA,EAAD,CAASiN,MAAM,QAAO7N,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,SAAjC,4CCrCVuQ,GAAc,SAAAxQ,GAA4B,IAA1BoC,EAA0BpC,EAA1BoC,MAAO6H,EAAmBjK,EAAnBiK,cAEzB,OACQnJ,EAAAD,EAAAE,cAAC0P,GAAA,EAAD,CACIC,YAAY,aAEX,SAACC,EAAmBC,GACjB,OAAQ9P,EAAAD,EAAAE,cAAA,OAAKwN,IAAKoC,EAAkBE,UAC/BzO,EAAMZ,IAAI,SAACa,EAAGoI,GAAJ,OAAe3J,EAAAD,EAAAE,cAAC0P,GAAA,EAAD,CAClB9O,IAAKU,EAAEF,KACP2O,YAAazO,EAAEF,KACfsI,MAAOA,GACN,SAACsG,EAAmBC,GAApB,OACGlQ,EAAAD,EAAAE,cAAA,MAAAR,OAAAgQ,OAAA,CAAKhC,IAAKwC,EAAkBF,UACpBE,EAAkBE,eAClBF,EAAkBG,iBACtBpQ,EAAAD,EAAAE,cAACoQ,EAAD,CACIlH,cAAeA,EAAc5H,GAC7BC,KAAMD,EAAEC,KACRrC,KAAMoC,EAAEpC,KACRkC,KAAME,EAAEF,KACRI,SAAUF,EAAEE,gBAI/BoO,EAAkBxB,gBA8E5BiC,GAvEA,WAAM,IAAAxF,EAEUjC,IAAnBnG,EAFSoI,EAETpI,MAAOP,EAFE2I,EAEF3I,QAFE+B,EAIaxB,EAAME,QAAU,GAAtCzD,EAJS+E,EAIT/E,KAAMkC,EAJG6C,EAIH7C,KAAMC,EAJH4C,EAIG5C,MAMdiP,GAJoBjR,IAAMQ,YAAY,SAACsE,EAAM5C,GAC/CW,EAAQ8B,UAAU,CAAEG,OAAM5C,UAC3B,CAAEW,IAEc7C,IAAMQ,YAAY,SAACsE,GAAD,OAAU,SAAC5C,GAAD,OAAUW,EAAQ8B,UAAU,CAAEG,OAAM5C,WAAS,KAEtFgP,EAAgBlR,IAAMQ,YAAY,SAACiI,GACjCA,EAAO0I,cAIXhN,QAAQ8D,IAAI,YAAa,CAAEQ,WAE3B5F,EAAQuF,cAAc,CAClBG,YAAaE,EAAO2I,OAAO/G,MAC3B7B,iBAAkBC,EAAO0I,YAAY9G,UAE1C,CAAExH,IAEL,IAAIO,EAAME,OAEN,OAAQ5C,EAAAD,EAAAE,cAACW,EAAA,EAAD,CAASiN,MAAM,UAAS7N,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,YAAnC,yBAGZ,IAAMwR,EAAQ,CACV,CACIC,SAAU,CAAE/P,IAAK,eAAgB6L,KAAM,OAAQC,QAAS,SACxDkE,OAAQ,kBAAO7Q,EAAAD,EAAAE,cAAC6Q,EAAA,EAAIC,KAAL,KACX/Q,EAAAD,EAAAE,cAAC0P,GAAA,EAAD,CAAiBqB,UAAWR,GACxBxQ,EAAAD,EAAAE,cAACgR,GAAD,CAAa3P,MAAOA,EAAO6H,cAAeoH,QAItD,CACIK,SAAU,CAAE/P,IAAK,eAAgB6L,KAAM,UAAWC,QAAS,wBAC3DkE,OAAQ,kBAAM7Q,EAAAD,EAAAE,cAAC6Q,EAAA,EAAIC,KAAL,KAAU/Q,EAAAD,EAAAE,cAACiR,GAAD,UAIhC,OACIlR,EAAAD,EAAAE,cAAA,WACID,EAAAD,EAAAE,cAACkR,EAAA,EAAD,KACInR,EAAAD,EAAAE,cAAA,MAAIO,MAAO,CAACC,QAAS,aAAcY,EAAnC,MAA4ClC,GAC5Ca,EAAAD,EAAAE,cAACkR,EAAA,EAAKA,KAAN,CAAWC,SAAS,SAChBpR,EAAAD,EAAAE,cAACoR,EAAD,CAAmBxG,aAAc7K,EAAAD,EAAAE,cAACkR,EAAA,EAAKhC,KAAN,CAAWtB,MAAM,SAASzN,QAAQ,GAC/DJ,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,WACXa,EAAAD,EAAAE,cAAA,gCAGJD,EAAAD,EAAAE,cAACqR,EAAD,CACIzG,aACI7K,EAAAD,EAAAE,cAACkR,EAAA,EAAKhC,KAAN,CAAWtB,MAAM,QAAQzN,QAAQ,GAC7BJ,EAAAD,EAAAE,cAACK,EAAA,EAAD,CAAMnB,KAAK,aACXa,EAAAD,EAAAE,cAAA,oCAOpBD,EAAAD,EAAAE,cAAC6Q,EAAA,EAAD,CAAKH,MAAOA,MClGTY,GAbF,SAAArS,GAASO,OAAA+R,EAAA,EAAA/R,CAAAP,GAAA,IAAA4L,EACSjC,IAAnBnG,EADSoI,EACTpI,MADSoI,EACF3I,QAEf,OACInC,EAAAD,EAAAE,cAAA,WACID,EAAAD,EAAAE,cAAC6L,EAAA,EAAD,CAAQ1L,OAAQsC,EAAMQ,GAAGC,iBACrBnD,EAAAD,EAAAE,cAAC8L,EAAA,EAAD,OAEJ/L,EAAAD,EAAAE,cAACwR,GAAD,QCeGC,OAvBf,WAAe,IAELvP,EAAY0G,IAAZ1G,QAMR,OAJA7C,IAAMkK,UAAU,WACdrH,EAAQC,QACP,IAGDpC,EAAAD,EAAAE,cAAA,WACED,EAAAD,EAAAE,cAAA,OAAKa,GAAG,OACNd,EAAAD,EAAAE,cAAA,OACEO,MAAO,CAACoL,OAAQ,IAChBQ,IAAI,sGACJuF,IAAI,cAER3R,EAAAD,EAAAE,cAAA,OAAKa,GAAG,gBACJd,EAAAD,EAAAE,cAAC2R,GAAD,SCVUrD,QACW,cAA7BsD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASpB,OACL7Q,EAAAD,EAAAE,cAACiS,EAAA,EAAD,CAAkB/K,MAAOwB,GACrB3I,EAAAD,EAAAE,cAACkS,GAAD,OAENC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1c4b1ddc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Icon, Segment, Container, Message } from 'semantic-ui-react'\n\nconst CourseElement = ({name, criterias}) => {\n    const [ isActive, setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion>\n            <Accordion.Title active={isActive} onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {name}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <div style={{padding: '0 10px 10px 10px'}}>\n                    {criterias && criterias.map(c => <Message key={c.id}>{c.name}</Message>)}\n                </div>\n            </Accordion.Content>\n        </Accordion>\n\n        // <div>\n        //     <h3>{name}</h3>\n        //     <ul>\n        //         {criterias && criterias.map(c => <li key={c.id}>{c.name}</li>)}\n        //     </ul>\n        // </div>\n    );\n};\n\nCourseElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    criterias: PropTypes.array.isRequired\n}\n\nexport default CourseElement;\n","\n\nconst reduceCourseCriterias = (criterias) => {\n    return criterias.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: { text: current.name }\n        }\n    }, {});\n}\n\nconst reduceCourseElements = (elements) => {\n    return elements.reduce((previous, current) => {\n        return {\n            ...previous,\n            [current.id]: {\n                name: current.name,\n                pc: reduceCourseCriterias(current.criterias)\n            }\n        }\n    }, {});\n}\n\nexport const unnormalizeCourseJson = (input) => {\n    const output = {\n        name: input.name,\n        code: input.code,\n        units: input.units.map(unit => {\n            return {\n                name: unit.name,\n                code: unit.code,\n                tags: unit.tags,\n                EPC: reduceCourseElements(unit.elements)\n            }\n        })\n    }\n    return output;\n}\n\nexport const normalizeCourseJson = (input) => new Promise((resolve, reject) => setTimeout(() => {\n    try {\n        resolve({\n            name: input.name,\n            code: input.code,\n            units: input.units.map(u => {\n                return {\n                    name: u.name,\n                    code: u.code,\n                    tags: u.tags || [],\n                    elements: Object.keys(u.EPC).map(eKey => {\n                        const el = u.EPC[eKey];\n                        return {\n                            id: eKey,\n                            name: el.name,\n                            criterias: Object.keys(el.pc).map(cKey => {\n                                const criteria = el.pc[cKey];\n                                return {\n                                    id: cKey,\n                                    name: criteria.text\n                                }\n                            })\n                        };\n                    })\n                }\n            })\n        });\n    } catch {\n        reject(new Error('Invalid JSON format.'));\n    }\n}, 0));","import { createOvermind } from 'overmind';\nimport { createHook } from 'overmind-react';\nimport CoursePayload from './course-unit.json';\nimport { unnormalizeCourseJson, normalizeCourseJson } from './utils';\n\nconst FETCH_COURSE_URL = 'https://c2d51dfc-1802-45cb-bcc0-51a3737725f5.mock.pstmn.io/courses/advance-diploma-it';\nconst COURSE_STORAGE_KEY = 'cti-course-key';\n\nconst state = {\n    ui: {\n        isLoadingCourse: false,\n        isLoadingJson: false,\n        showSaveJsonModal: false,\n        isProcessingJson: false,\n        processJsonError: null\n    },\n    course: null,\n    outputJson: null,\n    tags: [],\n    courseTags: null\n}\n\nconst actions = {\n    init: async ({ state, actions, effects }) => {\n        state.ui.isLoadingCourse = true;\n        try {\n            let course = effects.loadCourseFromStorage();\n\n            if(course) {\n                state.course = course;\n            } else {\n                const course = await effects.fetchCourse();\n                state.course = await normalizeCourseJson(course);\n            }\n        } catch(e) {\n            state.course = CoursePayload;\n            console.error(e);\n        } finally {\n            state.ui.isLoadingCourse = false;\n        }\n    },\n    updateTag: ({ state, actions }, { tags, unit }) => {\n        const tagValues = tags.map(t => t.id);\n\n        state.tags = [...tagValues];\n        \n        state.course.units = state.course.units.map(u => {\n            if(u.code !== unit.code) {\n                return u;\n            } else {\n                return { ...u, tags: [...state.tags]}\n            }\n        });\n        actions.saveJsonToLocalStorage();\n    },\n    displaySaveModal: ({state}) => {\n        state.ui.showSaveJsonModal = true;\n        state.ui.isLoadingJson = true;\n        setTimeout(() => {\n            state.outputJson = unnormalizeCourseJson(state.course);\n            state.ui.isLoadingJson = false;\n        }, 0);\n    },\n    uploadCourse: ({ state, actions }, courseContent) => {\n        actions.resetJsonProcessState();\n        state.ui.isProcessingJson = true;\n        setTimeout(async () => {\n            try {\n                const json = JSON.parse(courseContent);\n                if(json) {\n                    state.course = await normalizeCourseJson(json);\n                    state.ui.processJsonResult = 'success';\n                } else {\n                    state.ui.processJsonResult = 'fail';\n                    state.ui.processJsonError = 'Be smart and set a proper JSON format 🤪'\n                }\n            } catch (e) {\n                state.ui.processJsonResult = 'fail';\n                state.ui.processJsonError = e.message;\n                console.error(e);\n            } finally {\n                state.ui.isProcessingJson = false;\n            } \n        }, 1000);\n    },\n    resetJsonProcessState: ({state}) => {\n        state.ui.isProcessingJson = false;\n        state.ui.processJsonError = null;\n        state.ui.processJsonResult = null;\n    },\n    saveJsonToLocalStorage: ({state}) => {\n        localStorage.setItem(COURSE_STORAGE_KEY, JSON.stringify(state.course));\n    },\n    refreshCourseTags: ({state}) => {\n        if(!state.course) return;\n\n        state.ui.isLoadingCourse = true;\n        setTimeout(() => {\n            try {\n                state.courseTags = state.course.units.reduce((prev, current) => { \n                    const unitName = current.name;\n    \n                    for(let tag of current.tags || []) {\n                        prev = {\n                            ...prev,\n                            [tag]: [\n                                ...(prev[tag] || []),\n                                ...[unitName]\n                            ]\n                        }\n                    }\n                    return prev;\n                }, {});\n\n                console.log('check course tags', {\n                    check: state.courseTags\n                })\n            } \n            catch(e) { console.error(e) }\n            finally { state.ui.isLoadingCourse = false; }\n        }, 0);\n    },\n    reorderCourse: ({state}, {sourceIndex, destinationIndex}) => {\n        const result = [...state.course.units];\n        const [ removed ] = result.splice(sourceIndex, 1);\n        result.splice(destinationIndex, 0, removed);\n        state.course.units = result;\n    }\n}\n\nconst effects = {\n    fetchCourse: async () => {\n        const resp = await fetch(FETCH_COURSE_URL);\n        return await resp.json();\n    },\n    loadCourseFromStorage: () => {\n        const storeItem = localStorage.getItem(COURSE_STORAGE_KEY);\n        return storeItem && JSON.parse(storeItem);\n    }\n}\n\nexport const overmind = createOvermind({\n    state,\n    actions,\n    effects\n});\n\nexport const useOvermind = createHook();","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select/creatable';\nimport { useOvermind } from '../overmind';\n\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nimport useWhyDidYouUpdate from '../hooks/useWhyDidYouUpdate';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  \nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst initialState = {\n    tags: [],\n    suggestions: []\n}\n\nconst parseSelectedTagsOrNull = (tags) => (tags && tags.map(text => ({id: text, text }))) || [];\n\nconst CourseTags = (props) => {\n    // useWhyDidYouUpdate('[course-tags]', props);\n    const { onTagsUpdated } = props;\n    const [ tags, setTags ] = useState(parseSelectedTagsOrNull(props.selectedTags));\n\n    useEffect(() => {\n        setTags(parseSelectedTagsOrNull(props.selectedTags))\n    }, [ setTags, props.selectedTags ] )\n\n    const notifyTagsUpdated = useCallback((tags) => {\n        //console.log('should notify with', { onTagsUpdated, tags });\n        onTagsUpdated && onTagsUpdated(tags)\n    }, [ onTagsUpdated] );\n\n    const handleDelete = useCallback(index => {\n        const newTags = tags.filter((tag, i) => i !== index);\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    const handleAddition = useCallback(tag => {\n        const newTags = [...tags.filter(t => t.id !== tag.id), tag]\n        notifyTagsUpdated(newTags);\n    }, [ tags, notifyTagsUpdated ]);\n\n    return (\n        <div>\n            <ReactTags \n                classNames={{\n                    tag: 'ui label',\n                    tagInput: 'ui input'\n                }}\n                tags={tags}\n                allowDragDrop={false}\n                delimiters={delimiters}\n                handleDelete={handleDelete}\n                handleAddition={handleAddition} />\n        </div>\n    );\n}\n\nexport const OvermindedCourseTags = ({ unit }) => {\n    const { state, actions } = useOvermind();\n\n    const stateUnit = state.course.units.filter(u => u.code === unit.code);\n\n    const handleTagSelected = useCallback((tags) => {\n        //console.log('handle called...');\n        actions.updateTag({ unit, tags })\n    }, [ actions, unit ]);\n\n    return <CourseTags\n                tags={state.tags}\n                selectedTags={stateUnit.tags ? [...stateUnit.tags] : []}\n                onTagsUpdated={handleTagSelected}\n            />\n}\n\nexport default CourseTags;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CourseElement from './course-element';\nimport CourseTags from './course-tags';\nimport { Accordion, Icon, Label } from 'semantic-ui-react';\n\nconst CourseUnit = ({ \n    name, \n    code, \n    elements,\n    tags,\n    onTagsUpdated\n}) =>\n{\n    const handleTagsUpdated = React.useCallback((tags) => onTagsUpdated(tags), [ ]);\n\n    const [ isActive , setActive ] = React.useState(false);\n\n    const toggleActive = React.useCallback(() => {\n        setActive(a => !a);\n    }, [ setActive ]);\n\n    return (\n        <Accordion active={isActive.toString()} fluid styled>\n            <Accordion.Title onClick={toggleActive}>\n                <Icon name=\"dropdown\" />\n                {`${code} - ${name}`}\n                {tags ? tags.map(tag => <Label key={tag}>{tag}</Label>) : null}\n            </Accordion.Title>\n            <Accordion.Content active={isActive}>\n                <CourseTags selectedTags={tags} onTagsUpdated={handleTagsUpdated} />\n                {elements && elements.map(e => <CourseElement key={e.id} name={e.name} criterias={e.criterias} />)}\n            </Accordion.Content>\n        </Accordion>\n    )\n};\n\nCourseUnit.propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired\n};\n\nexport default CourseUnit;","import React from 'react';\nimport { Modal, Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\nimport ReactJson from 'react-json-view';\nimport FileSaver from 'file-saver';\n\nconst saveJsonContent = (json) => {\n    var blob = new Blob([JSON.stringify(json)], { type: 'application.json;charset=utf-8'});\n    FileSaver.saveAs(blob, 'course-content.json');\n}\n\nconst DownloadCourseModal = ({ modalTrigger }) => {\n    const { state, actions } = useOvermind();\n\n    const handleOnModalOpen = React.useCallback(() => {\n        actions.displaySaveModal();\n    }, [ actions ]);\n\n    const handleSave = React.useCallback(() => {\n        saveJsonContent(state.outputJson);\n    }, [state.outputJson]);\n\n    return (\n        <Modal trigger={modalTrigger} onOpen={handleOnModalOpen}>\n            <Modal.Header>Download Course</Modal.Header>\n            <Modal.Content>\n                <Segment style={{height: 500, overflow: 'auto'}}>\n                    <Dimmer active={state.ui.isLoadingJson}>\n                        <Loader />\n                    </Dimmer>\n                    {state.outputJson && state.ui.isLoadingJson === false\n                    ? <ReactJson \n                        name={false}\n                        style={{overflow: 'auto'}}\n                        onEdit={false} onAdd={false} onDelete={false}\n                        src={state.outputJson} /> \n                    : null}\n                </Segment>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button \n                    loading={state.ui.isLoadingJson}\n                    positive\n                    labelPosition='right'\n                    icon='download'\n                    content='Download'\n                    onClick={handleSave}\n                />\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default DownloadCourseModal;","import React, { useCallback } from 'react';\nimport { useOvermind } from '../overmind';\nimport { Modal, Button, Form, TextArea, Message,\n    Header,\n    Dimmer, Loader, Segment, Icon } from 'semantic-ui-react';\n\nconst UploadCourseModal = ({modalTrigger}) => {\n    const { state, actions } = useOvermind();\n    \n    const [ courseContent, setCourseContent ] = React.useState(null);\n\n    const modalRef = React.useRef(null);\n\n    React.useEffect(() => {\n        if(state.ui.processJsonResult === 'success') {\n            const timeoutId = setTimeout(() => modalRef.current.handleClose(), 2000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [ state.ui.processJsonResult ]);\n\n    const handleTextChanged = useCallback(event => {\n        const textContent = event.target.value;\n        setCourseContent(textContent);\n    }, [ setCourseContent ]);\n\n    const handleUploadCourse = useCallback(() => {\n        console.log('upload content', {\n            courseContent\n        })\n        actions.uploadCourse(courseContent);\n    }, [ courseContent, actions ]);\n\n    const handleModalClosed = useCallback(() => {\n        actions.resetJsonProcessState();\n    }, [ actions ]);\n\n    return (\n        <Modal\n            ref={modalRef}\n            trigger={modalTrigger}\n            onClose={handleModalClosed}\n            closeOnEscape={state.ui.isProcessingJson === false}\n            closeOnDimmerClick={state.ui.isProcessingJson === false}>\n            <Modal.Header>Course Upload</Modal.Header>\n            <Modal.Content>\n                <Dimmer active={state.ui.isProcessingJson}>\n                    <Loader />\n                </Dimmer>\n                {state.ui.processJsonError \n                    ? (<Message color='red'>\n                            <Icon name='bug' color='red' size='large' />\n                            {state.ui.processJsonError}\n                        </Message>)\n                    : null }\n\n                {state.ui.processJsonResult === 'success'\n                    ? <Segment textAlign='center'>\n                        <Icon size='massive' color='green' name='hand peace outline' />\n                        <Header color='green' as=\"h2\">Course JSON uploaded</Header>\n                    </Segment>\n                    : (<Form>\n                        <TextArea \n                            rows={10}\n                            onChange={handleTextChanged}\n                            placeholder='Paste the JSON content here' />\n                    </Form>)}\n            </Modal.Content>\n            <Modal.Actions>\n                {state.ui.processJsonResult === 'success' \n                    ? null\n                    : (<Button\n                        disabled={Boolean(courseContent) === false}\n                        positive\n                        labelPosition='right'\n                        icon='upload'\n                        content='Upload'\n                        onClick={handleUploadCourse}\n                    />)}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default UploadCourseModal;","import React from 'react';\nimport { Card, List, Message, Icon } from 'semantic-ui-react';\nimport { useOvermind } from '../overmind';\n\nconst colours = [\n    'yellow',\n    'orange',\n    'green',\n    'teal',\n    'blue',\n    'purple',\n    'pink',\n    'red',\n    'black'\n];\n\nconst getRandomColour = (index) => {\n    if(index < colours.length) return colours[index];\n    const min = 0;\n    const max = colours.length - 1;\n    return colours[Math.floor(Math.random() * (max - min + 1)) + min];\n}\n\nconst TagGroup = ({ name, units, color }) => {\n    return (<Card color={color}>\n        <Card.Content>\n            <Card.Header><Icon name='tag' color={color} />{name}</Card.Header>\n            <Card.Description>\n                <List>\n                    {units.map(u => (<List.Item key={u}><Icon name='circle outline' />{u}</List.Item>))}\n                </List>\n            </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n            {units.length} unit(s)\n        </Card.Content>\n    </Card>)\n}\n\nconst UnitsTaggedGroup = () => {\n\n    const { state, actions } = useOvermind();\n\n    React.useEffect(() => {\n        actions.refreshCourseTags();\n    }, []);\n\n    const courseTags = React.useMemo(() => {\n        if(!state.courseTags) return null;\n        return Object.keys(state.courseTags).map((name, index) => ({\n            name, units: state.courseTags[name], color: getRandomColour(index)\n        }));\n    }, [ state.courseTags ]);\n\n    if(!courseTags || courseTags.length === 0) {\n        return (<Message color='blue'><Icon name='info' />Add tag to at least one unit.</Message>)\n    }\n\n    return (<Card.Group>\n        {courseTags.map(c => (<TagGroup key={c.name} {...c} />))}\n    </Card.Group>);\n}\n\nexport default UnitsTaggedGroup","import React from 'react';\nimport CourseUnit from './course-unit';\nimport { useOvermind } from '../overmind';\nimport { Menu, Icon, Message, Tab, Segment } from 'semantic-ui-react';\nimport DownloadCourseModal from './download-course-modal';\nimport UploadCourseModal from './upload-course-modal';\nimport UnitsTaggedGroup from './units-tagged-group';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst getListStyle = (isDraggingOver, overflow) => ({\n    background: isDraggingOver ? 'lightblue' : 'grey',\n    padding: 8,\n    border: '5px solid pink',\n    width: 250,\n    maxHeight: '50vh',\n    overflow,\n});\n\nconst CourseUnits = ({units, onTagsUpdated}) => {\n\n    return (\n            <Droppable \n                droppableId=\"droppable\"\n            >\n                {(droppableProvided, droppableSnapshot) => {\n                    return (<div ref={droppableProvided.innerRef}>\n                        {units.map((u, index) => (<Draggable\n                                key={u.code} \n                                draggableId={u.code}\n                                index={index}>\n                                {(draggableProvided, draggableSnapshot) => (\n                                    <div ref={draggableProvided.innerRef}\n                                        {...draggableProvided.draggableProps}\n                                        {...draggableProvided.dragHandleProps}>\n                                        <CourseUnit\n                                            onTagsUpdated={onTagsUpdated(u)}\n                                            tags={u.tags}\n                                            name={u.name} \n                                            code={u.code} \n                                            elements={u.elements} />\n                                    </div>\n                                )}\n                        </Draggable>))}\n                        {droppableProvided.placeholder}\n                    </div>)\n                }}\n            </Droppable>\n    )\n};\n\nconst Course = () => {\n\n    const { state, actions } = useOvermind();\n\n    const { name, code, units } = state.course || {};\n\n    const handleTagsUpdated = React.useCallback((unit, tags) => {\n        actions.updateTag({ unit, tags });\n    }, [ actions ]);\n\n    const handUpdate = React.useCallback((unit) => (tags) => actions.updateTag({ unit, tags }), []);\n\n    const handleDragEnd = React.useCallback((result) => {\n        if(!result.destination) {\n            return;\n        }\n\n        console.log('onDragEnd', { result });\n\n        actions.reorderCourse({\n            sourceIndex: result.source.index,\n            destinationIndex: result.destination.index\n        });\n    }, [ actions ]);\n\n    if(!state.course) \n    {\n        return (<Message color='yellow'><Icon name='warning'></Icon>No course uploaded...</Message>);\n    }\n\n    const panes = [\n        { \n            menuItem: { key: 'course-units', icon: 'list', content: 'Units' },\n            render: () => (<Tab.Pane>\n                <DragDropContext onDragEnd={handleDragEnd}>\n                    <CourseUnits units={units} onTagsUpdated={handUpdate} />\n                </DragDropContext>\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'course-group', icon: 'sitemap', content: 'Units Grouped by Tag'},\n            render: () => <Tab.Pane><UnitsTaggedGroup /></Tab.Pane>\n        }\n    ]\n\n    return (\n        <div>\n            <Menu>\n                <h2 style={{padding: '5px 20px'}}>{code} - {name}</h2>\n                <Menu.Menu position='right'>\n                    <UploadCourseModal modalTrigger={<Menu.Item color='violet' active={true}>\n                        <Icon name='upload'></Icon>\n                        <strong>Upload JSON</strong>\n                    </Menu.Item>} />\n                    \n                    <DownloadCourseModal\n                        modalTrigger={(\n                            <Menu.Item color='green' active={true}>\n                                <Icon name=\"download\"></Icon>\n                                <strong>Download JSON</strong>\n                            </Menu.Item>\n                        )}\n                    />\n                </Menu.Menu>\n            </Menu>\n\n            <Tab panes={panes} />\n        </div>\n    );\n}\n\nexport default Course;","import React from 'react';\nimport Course from '../components/course';\nimport {useOvermind} from '../overmind';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Page = ({}) => {\n    const { state, actions } = useOvermind();\n\n    return (\n        <div>\n            <Dimmer active={state.ui.isLoadingCourse}>\n                <Loader />\n            </Dimmer>\n            <Course />\n        </div>\n    );\n};\n\nexport default Page;","import React from 'react';\nimport './App.css';\nimport CoursePage from './pages/course-page';\nimport { useOvermind } from './overmind';\n\nfunction App() {\n\n  const { actions } = useOvermind();\n\n  React.useEffect(() => {\n    actions.init();\n  }, []);\n\n  return (\n    <div>\n      <div id=\"nav\">\n        <img \n          style={{height: 40}}\n          src=\"https://my.cti.qld.edu.au/pluginfile.php/1/core_admin/logocompact/0x70/1559616009/logo-lg-white.png\" \n          alt=\"CTI Logo\" />\n      </div>\n      <div id=\"page-content\">\n          <CoursePage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider as OvermindProvider } from 'overmind-react';\nimport { overmind } from './overmind';\n\n\nReactDOM.render(\n    <OvermindProvider value={overmind}>\n        <App />\n    </OvermindProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}